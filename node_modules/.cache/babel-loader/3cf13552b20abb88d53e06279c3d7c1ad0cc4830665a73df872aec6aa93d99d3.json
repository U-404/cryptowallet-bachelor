{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/components/DAOInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './DAOInterface.css';\nimport SimpleDAOArtifact from '../artifacts/src/contracts/SimpleDAO.sol/SimpleDAO.json';\nimport { contractAddresses } from '../contracts/contractAddresses';\n\n// Update the daoABI constant\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daoABI = SimpleDAOArtifact.abi;\nfunction DAOInterface({\n  account,\n  network\n}) {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [proposals, setProposals] = useState([]);\n  const [newProposal, setNewProposal] = useState('');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [recipientAddress, setRecipientAddress] = useState('');\n  const [distributeAmount, setDistributeAmount] = useState('');\n  useEffect(() => {\n    const initializeContract = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get the appropriate contract address based on network\n        const contractAddress = network === 'mainnet' ? process.env.REACT_APP_DAO_CONTRACT_MAINNET : process.env.REACT_APP_DAO_CONTRACT_SEPOLIA;\n\n        // Validate contract address\n        if (!contractAddress) {\n          throw new Error(`No DAO contract address configured for ${network} network`);\n        }\n\n        // Create contract instance\n        const daoContract = new ethers.Contract(contractAddress, daoABI, account.provider);\n        setContract(daoContract);\n        await fetchProposals(daoContract);\n        await fetchTokenBalance(daoContract);\n      } catch (err) {\n        console.error('Error initializing DAO contract:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (account) {\n      initializeContract();\n    }\n  }, [account, network]);\n  const fetchTokenBalance = async daoContract => {\n    try {\n      const token = await daoContract.token();\n      const tokenContract = new ethers.Contract(token, [\"function balanceOf(address) view returns (uint256)\"], account.provider);\n      const balance = await tokenContract.balanceOf(account.address);\n      setTokenBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error('Error fetching token balance:', err);\n    }\n  };\n  const fetchProposals = async daoContract => {\n    try {\n      const count = await daoContract.proposalCount();\n      const proposalPromises = [];\n      for (let i = 1; i <= count.toNumber(); i++) {\n        proposalPromises.push(daoContract.getProposal(i));\n      }\n      const fetchedProposals = await Promise.all(proposalPromises);\n      setProposals(fetchedProposals.map(p => ({\n        id: p.id.toNumber(),\n        description: p.description,\n        forVotes: ethers.utils.formatEther(p.forVotes),\n        againstVotes: ethers.utils.formatEther(p.againstVotes),\n        deadline: new Date(p.deadline.toNumber() * 1000),\n        executed: p.executed\n      })));\n    } catch (err) {\n      console.error('Error fetching proposals:', err);\n      setError(err.message);\n    }\n  };\n  const createProposal = async () => {\n    try {\n      const tx = await contract.createProposal(newProposal);\n      await tx.wait();\n      setNewProposal('');\n      await fetchProposals(contract);\n    } catch (err) {\n      alert('Error creating proposal: ' + err.message);\n    }\n  };\n  const vote = async (proposalId, support) => {\n    try {\n      const tx = await contract.vote(proposalId, support);\n      await tx.wait();\n      await fetchProposals(contract);\n    } catch (err) {\n      alert('Error voting: ' + err.message);\n    }\n  };\n  const distributeTokens = async (address, amount) => {\n    try {\n      const tx = await contract.distributeTokens(address, amount);\n      await tx.wait();\n      await fetchTokenBalance(contract);\n      alert('Tokens distributed successfully!');\n    } catch (err) {\n      alert('Error distributing tokens: ' + err.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-loading\",\n      children: \"Loading DAO interface...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error Loading DAO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please make sure you're connected to the correct network and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dao-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DAO Governance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Voting Power: \", tokenBalance, \" DAO\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-proposal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newProposal,\n        onChange: e => setNewProposal(e.target.value),\n        placeholder: \"Enter proposal description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProposal,\n        children: \"Create Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proposals-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Proposals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), proposals.map(proposal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"proposal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: proposal.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"For: \", proposal.forVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Against: \", proposal.againstVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Deadline: \", proposal.deadline.toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), !proposal.executed && new Date() < proposal.deadline && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => vote(proposal.id, true),\n            children: \"Vote For\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => vote(proposal.id, false),\n            children: \"Vote Against\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), proposal.executed && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"executed\",\n          children: \"Executed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 35\n        }, this)]\n      }, proposal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), account && account.address.toLowerCase() === contract.owner().toLowerCase() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distribute-tokens\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Distribute Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Recipient Address\",\n        value: recipientAddress,\n        onChange: e => setRecipientAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: distributeAmount,\n        onChange: e => setDistributeAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => distributeTokens(recipientAddress, distributeAmount),\n        children: \"Distribute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(DAOInterface, \"2Pdsk595UTkSKxXQ+lqgr/IKkoA=\");\n_c = DAOInterface;\nexport default DAOInterface;\nvar _c;\n$RefreshReg$(_c, \"DAOInterface\");","map":{"version":3,"names":["React","useState","useEffect","ethers","SimpleDAOArtifact","contractAddresses","jsxDEV","_jsxDEV","daoABI","abi","DAOInterface","account","network","_s","contract","setContract","proposals","setProposals","newProposal","setNewProposal","tokenBalance","setTokenBalance","loading","setLoading","error","setError","recipientAddress","setRecipientAddress","distributeAmount","setDistributeAmount","initializeContract","contractAddress","process","env","REACT_APP_DAO_CONTRACT_MAINNET","REACT_APP_DAO_CONTRACT_SEPOLIA","Error","daoContract","Contract","provider","fetchProposals","fetchTokenBalance","err","console","message","token","tokenContract","balance","balanceOf","address","utils","formatEther","count","proposalCount","proposalPromises","i","toNumber","push","getProposal","fetchedProposals","Promise","all","map","p","id","description","forVotes","againstVotes","deadline","Date","executed","createProposal","tx","wait","alert","vote","proposalId","support","distributeTokens","amount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","proposal","toLocaleDateString","toLowerCase","owner","type","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/components/DAOInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './DAOInterface.css';\nimport SimpleDAOArtifact from '../artifacts/src/contracts/SimpleDAO.sol/SimpleDAO.json';\nimport { contractAddresses } from '../contracts/contractAddresses';\n\n// Update the daoABI constant\nconst daoABI = SimpleDAOArtifact.abi;\n\nfunction DAOInterface({ account, network }) {\n  const [contract, setContract] = useState(null);\n  const [proposals, setProposals] = useState([]);\n  const [newProposal, setNewProposal] = useState('');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [recipientAddress, setRecipientAddress] = useState('');\n  const [distributeAmount, setDistributeAmount] = useState('');\n\n  useEffect(() => {\n    const initializeContract = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get the appropriate contract address based on network\n        const contractAddress = network === 'mainnet'\n          ? process.env.REACT_APP_DAO_CONTRACT_MAINNET\n          : process.env.REACT_APP_DAO_CONTRACT_SEPOLIA;\n\n        // Validate contract address\n        if (!contractAddress) {\n          throw new Error(`No DAO contract address configured for ${network} network`);\n        }\n\n        // Create contract instance\n        const daoContract = new ethers.Contract(\n          contractAddress,\n          daoABI,\n          account.provider\n        );\n\n        setContract(daoContract);\n        await fetchProposals(daoContract);\n        await fetchTokenBalance(daoContract);\n      } catch (err) {\n        console.error('Error initializing DAO contract:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (account) {\n      initializeContract();\n    }\n  }, [account, network]);\n\n  const fetchTokenBalance = async (daoContract) => {\n    try {\n      const token = await daoContract.token();\n      const tokenContract = new ethers.Contract(\n        token,\n        [\"function balanceOf(address) view returns (uint256)\"],\n        account.provider\n      );\n      const balance = await tokenContract.balanceOf(account.address);\n      setTokenBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error('Error fetching token balance:', err);\n    }\n  };\n\n  const fetchProposals = async (daoContract) => {\n    try {\n      const count = await daoContract.proposalCount();\n      const proposalPromises = [];\n\n      for (let i = 1; i <= count.toNumber(); i++) {\n        proposalPromises.push(daoContract.getProposal(i));\n      }\n\n      const fetchedProposals = await Promise.all(proposalPromises);\n      setProposals(fetchedProposals.map(p => ({\n        id: p.id.toNumber(),\n        description: p.description,\n        forVotes: ethers.utils.formatEther(p.forVotes),\n        againstVotes: ethers.utils.formatEther(p.againstVotes),\n        deadline: new Date(p.deadline.toNumber() * 1000),\n        executed: p.executed\n      })));\n    } catch (err) {\n      console.error('Error fetching proposals:', err);\n      setError(err.message);\n    }\n  };\n\n  const createProposal = async () => {\n    try {\n      const tx = await contract.createProposal(newProposal);\n      await tx.wait();\n      setNewProposal('');\n      await fetchProposals(contract);\n    } catch (err) {\n      alert('Error creating proposal: ' + err.message);\n    }\n  };\n\n  const vote = async (proposalId, support) => {\n    try {\n      const tx = await contract.vote(proposalId, support);\n      await tx.wait();\n      await fetchProposals(contract);\n    } catch (err) {\n      alert('Error voting: ' + err.message);\n    }\n  };\n\n  const distributeTokens = async (address, amount) => {\n    try {\n      const tx = await contract.distributeTokens(address, amount);\n      await tx.wait();\n      await fetchTokenBalance(contract);\n      alert('Tokens distributed successfully!');\n    } catch (err) {\n      alert('Error distributing tokens: ' + err.message);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"dao-loading\">Loading DAO interface...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"dao-error\">\n        <h2>Error Loading DAO</h2>\n        <p>{error}</p>\n        <p>Please make sure you're connected to the correct network and try again.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dao-interface\">\n      <h2>DAO Governance</h2>\n      \n      <div className=\"dao-info\">\n        <p>Your Voting Power: {tokenBalance} DAO</p>\n      </div>\n\n      <div className=\"create-proposal\">\n        <h3>Create Proposal</h3>\n        <textarea\n          value={newProposal}\n          onChange={(e) => setNewProposal(e.target.value)}\n          placeholder=\"Enter proposal description\"\n        />\n        <button onClick={createProposal}>Create Proposal</button>\n      </div>\n\n      <div className=\"proposals-list\">\n        <h3>Active Proposals</h3>\n        {proposals.map((proposal) => (\n          <div key={proposal.id} className=\"proposal-item\">\n            <h4>{proposal.description}</h4>\n            <div className=\"vote-stats\">\n              <span>For: {proposal.forVotes}</span>\n              <span>Against: {proposal.againstVotes}</span>\n              <span>Deadline: {proposal.deadline.toLocaleDateString()}</span>\n            </div>\n            {!proposal.executed && new Date() < proposal.deadline && (\n              <div className=\"vote-buttons\">\n                <button onClick={() => vote(proposal.id, true)}>Vote For</button>\n                <button onClick={() => vote(proposal.id, false)}>Vote Against</button>\n              </div>\n            )}\n            {proposal.executed && <span className=\"executed\">Executed</span>}\n          </div>\n        ))}\n      </div>\n\n      {account && account.address.toLowerCase() === contract.owner().toLowerCase() && (\n        <div className=\"distribute-tokens\">\n          <h3>Distribute Tokens</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Recipient Address\"\n            value={recipientAddress}\n            onChange={(e) => setRecipientAddress(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Amount\"\n            value={distributeAmount}\n            onChange={(e) => setDistributeAmount(e.target.value)}\n          />\n          <button onClick={() => distributeTokens(recipientAddress, distributeAmount)}>\n            Distribute\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DAOInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}