{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/components/ChatGPT.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatGPT.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatGPT() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!question.trim()) return;\n    const newMessage = {\n      role: 'user',\n      content: question\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setQuestion('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4-turbo-preview\",\n          messages: [...messages, newMessage],\n          max_tokens: 1000,\n          temperature: 0.7\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n      const data = await response.json();\n      if (data.choices && data.choices[0]) {\n        setMessages(prev => [...prev, data.choices[0].message]);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, there was an error processing your request.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatgpt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-icon ${message.role === 'user' ? 'user-icon' : 'assistant-icon'}`,\n          children: message.role === 'user' ? 'U' : 'A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-icon assistant-icon\",\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"question-form\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        placeholder: \"Send a message...\",\n        disabled: isLoading,\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit(e);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatGPT, \"2ZYsmKMtCaL/hpaTNklGdJOI8sk=\");\n_c = ChatGPT;\nexport default ChatGPT;\nvar _c;\n$RefreshReg$(_c, \"ChatGPT\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatGPT","_s","question","setQuestion","messages","setMessages","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","newMessage","role","content","prev","response","fetch","method","headers","process","env","REACT_APP_OPENAI_API_KEY","body","JSON","stringify","model","max_tokens","temperature","ok","Error","data","json","choices","message","error","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","value","onChange","target","placeholder","disabled","onKeyDown","key","shiftKey","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/components/ChatGPT.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ChatGPT.css';\n\nfunction ChatGPT() {\n  const [question, setQuestion] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!question.trim()) return;\n\n    const newMessage = { role: 'user', content: question };\n    setMessages(prev => [...prev, newMessage]);\n    setQuestion('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4-turbo-preview\",\n          messages: [...messages, newMessage],\n          max_tokens: 1000,\n          temperature: 0.7\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n\n      const data = await response.json();\n      if (data.choices && data.choices[0]) {\n        setMessages(prev => [...prev, data.choices[0].message]);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, there was an error processing your request.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chatgpt-container\">\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div \n            key={index} \n            className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}\n          >\n            <div className={`message-icon ${message.role === 'user' ? 'user-icon' : 'assistant-icon'}`}>\n              {message.role === 'user' ? 'U' : 'A'}\n            </div>\n            <div className=\"message-content\">\n              {message.content}\n            </div>\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"message assistant-message\">\n            <div className=\"message-icon assistant-icon\">A</div>\n            <div className=\"message-content\">Thinking...</div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      <form onSubmit={handleSubmit} className=\"question-form\">\n        <textarea\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          placeholder=\"Send a message...\"\n          disabled={isLoading}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSubmit(e);\n            }\n          }}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default ChatGPT; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMa,cAAc,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdY,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACd,QAAQ,CAACe,IAAI,CAAC,CAAC,EAAE;IAEtB,MAAMC,UAAU,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAElB;IAAS,CAAC;IACtDG,WAAW,CAACgB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,UAAU,CAAC,CAAC;IAC1Cf,WAAW,CAAC,EAAE,CAAC;IACfI,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUC,OAAO,CAACC,GAAG,CAACC,wBAAwB;QACjE,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,qBAAqB;UAC5B5B,QAAQ,EAAE,CAAC,GAAGA,QAAQ,EAAEc,UAAU,CAAC;UACnCe,UAAU,EAAE,IAAI;UAChBC,WAAW,EAAE;QACf,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,MAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;QACnClC,WAAW,CAACgB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEgB,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACzD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdpC,WAAW,CAACgB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BF,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRb,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA;IAAK2C,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC5C,OAAA;MAAK2C,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BvC,QAAQ,CAACwC,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,kBAC3B9C,OAAA;QAEE2C,SAAS,EAAE,WAAWF,OAAO,CAACrB,IAAI,KAAK,MAAM,GAAG,cAAc,GAAG,mBAAmB,EAAG;QAAAwB,QAAA,gBAEvF5C,OAAA;UAAK2C,SAAS,EAAE,gBAAgBF,OAAO,CAACrB,IAAI,KAAK,MAAM,GAAG,WAAW,GAAG,gBAAgB,EAAG;UAAAwB,QAAA,EACxFH,OAAO,CAACrB,IAAI,KAAK,MAAM,GAAG,GAAG,GAAG;QAAG;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACNlD,OAAA;UAAK2C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7BH,OAAO,CAACpB;QAAO;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA,GARDJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASP,CACN,CAAC,EACD3C,SAAS,iBACRP,OAAA;QAAK2C,SAAS,EAAC,2BAA2B;QAAAC,QAAA,gBACxC5C,OAAA;UAAK2C,SAAS,EAAC,6BAA6B;UAAAC,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpDlD,OAAA;UAAK2C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACN,eACDlD,OAAA;QAAKmD,GAAG,EAAE1C;MAAe;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACNlD,OAAA;MAAMoD,QAAQ,EAAErC,YAAa;MAAC4B,SAAS,EAAC,eAAe;MAAAC,QAAA,eACrD5C,OAAA;QACEqD,KAAK,EAAElD,QAAS;QAChBmD,QAAQ,EAAGtC,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACuC,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,mBAAmB;QAC/BC,QAAQ,EAAElD,SAAU;QACpBmD,SAAS,EAAG1C,CAAC,IAAK;UAChB,IAAIA,CAAC,CAAC2C,GAAG,KAAK,OAAO,IAAI,CAAC3C,CAAC,CAAC4C,QAAQ,EAAE;YACpC5C,CAAC,CAACC,cAAc,CAAC,CAAC;YAClBF,YAAY,CAACC,CAAC,CAAC;UACjB;QACF;MAAE;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChD,EAAA,CAhGQD,OAAO;AAAA4D,EAAA,GAAP5D,OAAO;AAkGhB,eAAeA,OAAO;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}