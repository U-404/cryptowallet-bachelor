{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('welcome');\n  const [isLoading, setIsLoading] = useState(true);\n  const [seedPhrase, setSeedPhrase] = useState(null);\n  const [error, setError] = useState(null);\n  const provider = React.useMemo(() => {\n    try {\n      const rpcUrl = network === 'mainnet' ? process.env.REACT_APP_MAINNET_RPC : process.env.REACT_APP_SEPOLIA_RPC;\n      if (!rpcUrl) {\n        throw new Error('RPC URL not configured');\n      }\n      return new ethers.providers.JsonRpcProvider(rpcUrl, network === 'mainnet' ? 'mainnet' : 'sepolia');\n    } catch (error) {\n      console.error('Error initializing provider:', error);\n      return null;\n    }\n  }, [network]);\n  useEffect(() => {\n    // Clear effect to prevent automatic loading\n    localStorage.removeItem('wallet');\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    console.log('Current view:', view);\n  }, [view]);\n  useEffect(() => {\n    if (!provider) {\n      setError('Failed to connect to network. Please check your RPC configuration.');\n      return;\n    }\n    const updateWalletForNetwork = async () => {\n      if (account) {\n        const wallet = account.connect(provider);\n        setAccount(wallet);\n        const balance = await provider.getBalance(wallet.address);\n        setBalance(Number(ethers.utils.formatEther(balance)).toFixed(5));\n      }\n    };\n    updateWalletForNetwork();\n  }, [provider]);\n  const loadWallet = async walletData => {\n    try {\n      const wallet = new ethers.Wallet(walletData.privateKey, provider);\n      setAccount(wallet);\n      const balance = await provider.getBalance(wallet.address);\n      setBalance(Number(ethers.utils.formatEther(balance)).toFixed(5));\n      setView('wallet');\n    } catch (error) {\n      console.error('Error loading wallet:', error);\n      alert('Failed to load wallet');\n      localStorage.removeItem('wallet');\n      setView('welcome');\n    }\n  };\n  const createWallet = async () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      };\n      const connectedWallet = wallet.connect(provider);\n      setAccount(connectedWallet);\n      setSeedPhrase(wallet.mnemonic.phrase);\n      setView('seed-phrase');\n    } catch (error) {\n      console.error('Error creating wallet:', error);\n      alert('Failed to create wallet');\n    }\n  };\n  const confirmSeedPhrase = () => {\n    const walletData = {\n      address: account.address,\n      privateKey: account.privateKey,\n      mnemonic: seedPhrase\n    };\n    localStorage.setItem('wallet', JSON.stringify(walletData));\n    setSeedPhrase(null);\n    setView('wallet');\n  };\n  const importWallet = seedPhrase => {\n    try {\n      if (!seedPhrase || seedPhrase.trim() === '') {\n        throw new Error('Seed phrase is required');\n      }\n\n      // Validate seed phrase format (12 or 24 words)\n      const words = seedPhrase.trim().split(' ');\n      if (words.length !== 12 && words.length !== 24) {\n        throw new Error('Seed phrase must be 12 or 24 words');\n      }\n\n      // Create wallet from mnemonic\n      const wallet = ethers.Wallet.fromMnemonic(seedPhrase.trim());\n      const connectedWallet = wallet.connect(provider);\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: seedPhrase\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(connectedWallet);\n      setView('wallet');\n    } catch (error) {\n      console.error('Invalid seed phrase:', error);\n      alert('Invalid seed phrase. Please check and try again.');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('wallet');\n    setAccount(null);\n    setBalance(0);\n    setView('welcome');\n  };\n  const renderContent = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 14\n      }, this);\n    }\n    if (view === 'import') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"import-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Import Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"import-instruction\",\n          children: \"Enter your 12 or 24-word seed phrase to recover your wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const seedPhrase = e.target.seedPhrase.value;\n            importWallet(seedPhrase);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"seedPhrase\",\n            placeholder: \"Enter your seed phrase (each word separated by a space)\",\n            required: true,\n            className: \"seed-phrase-input\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"import-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Import Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setView('welcome'),\n              className: \"secondary-button\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this);\n    }\n    if (view === 'seed-phrase' && seedPhrase) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seed-phrase-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Save Your Seed Phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning\",\n          children: \"Write down these 12 words in a secure location. You'll need them to recover your wallet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seed-phrase-container\",\n          children: seedPhrase.split(' ').map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seed-word\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"word-number\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"word\",\n              children: word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seed-phrase-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"confirmation-text\",\n            children: \"I have safely stored my seed phrase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: confirmSeedPhrase,\n            children: \"Continue to Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAccount(null);\n              setSeedPhrase(null);\n              setView('welcome');\n            },\n            className: \"secondary-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this);\n    }\n    if (!account || view === 'welcome') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Crypto Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createWallet,\n            children: \"Create New Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Setting view to import');\n              setView('import');\n            },\n            children: \"Import Existing Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this);\n    }\n    switch (view) {\n      case 'wallet':\n        return /*#__PURE__*/_jsxDEV(WalletCard, {\n          account: account,\n          balance: balance,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this);\n      case 'transactions':\n        return /*#__PURE__*/_jsxDEV(TransactionHistory, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this);\n      case 'dao':\n        return /*#__PURE__*/_jsxDEV(DAOInterface, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account,\n      network: network,\n      setNetwork: setNetwork,\n      setView: setView,\n      onLogout: logout,\n      view: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"seI2/j/1aZ2lkIxaps/ORRcTkzY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Navbar","WalletCard","TransactionHistory","DAOInterface","jsxDEV","_jsxDEV","App","_s","account","setAccount","network","setNetwork","balance","setBalance","view","setView","isLoading","setIsLoading","seedPhrase","setSeedPhrase","error","setError","provider","useMemo","rpcUrl","process","env","REACT_APP_MAINNET_RPC","REACT_APP_SEPOLIA_RPC","Error","providers","JsonRpcProvider","console","localStorage","removeItem","log","updateWalletForNetwork","wallet","connect","getBalance","address","Number","utils","formatEther","toFixed","loadWallet","walletData","Wallet","privateKey","alert","createWallet","createRandom","mnemonic","phrase","connectedWallet","confirmSeedPhrase","setItem","JSON","stringify","importWallet","trim","words","split","length","fromMnemonic","logout","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","target","value","name","placeholder","required","rows","type","onClick","map","word","index","onLogout","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('welcome');\n  const [isLoading, setIsLoading] = useState(true);\n  const [seedPhrase, setSeedPhrase] = useState(null);\n  const [error, setError] = useState(null);\n\n  const provider = React.useMemo(() => {\n    try {\n      const rpcUrl = network === 'mainnet' \n        ? process.env.REACT_APP_MAINNET_RPC \n        : process.env.REACT_APP_SEPOLIA_RPC;\n      \n      if (!rpcUrl) {\n        throw new Error('RPC URL not configured');\n      }\n\n      return new ethers.providers.JsonRpcProvider(\n        rpcUrl,\n        network === 'mainnet' ? 'mainnet' : 'sepolia'\n      );\n    } catch (error) {\n      console.error('Error initializing provider:', error);\n      return null;\n    }\n  }, [network]);\n\n  useEffect(() => {\n    // Clear effect to prevent automatic loading\n    localStorage.removeItem('wallet');\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    console.log('Current view:', view);\n  }, [view]);\n\n  useEffect(() => {\n    if (!provider) {\n      setError('Failed to connect to network. Please check your RPC configuration.');\n      return;\n    }\n\n    const updateWalletForNetwork = async () => {\n      if (account) {\n        const wallet = account.connect(provider);\n        setAccount(wallet);\n        \n        const balance = await provider.getBalance(wallet.address);\n        setBalance(Number(ethers.utils.formatEther(balance)).toFixed(5));\n      }\n    };\n\n    updateWalletForNetwork();\n  }, [provider]);\n\n  const loadWallet = async (walletData) => {\n    try {\n      const wallet = new ethers.Wallet(walletData.privateKey, provider);\n      setAccount(wallet);\n      const balance = await provider.getBalance(wallet.address);\n      setBalance(Number(ethers.utils.formatEther(balance)).toFixed(5));\n      setView('wallet');\n    } catch (error) {\n      console.error('Error loading wallet:', error);\n      alert('Failed to load wallet');\n      localStorage.removeItem('wallet');\n      setView('welcome');\n    }\n  };\n\n  const createWallet = async () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      };\n      const connectedWallet = wallet.connect(provider);\n      setAccount(connectedWallet);\n      setSeedPhrase(wallet.mnemonic.phrase);\n      setView('seed-phrase');\n    } catch (error) {\n      console.error('Error creating wallet:', error);\n      alert('Failed to create wallet');\n    }\n  };\n\n  const confirmSeedPhrase = () => {\n    const walletData = {\n      address: account.address,\n      privateKey: account.privateKey,\n      mnemonic: seedPhrase\n    };\n    localStorage.setItem('wallet', JSON.stringify(walletData));\n    setSeedPhrase(null);\n    setView('wallet');\n  };\n\n  const importWallet = (seedPhrase) => {\n    try {\n      if (!seedPhrase || seedPhrase.trim() === '') {\n        throw new Error('Seed phrase is required');\n      }\n\n      // Validate seed phrase format (12 or 24 words)\n      const words = seedPhrase.trim().split(' ');\n      if (words.length !== 12 && words.length !== 24) {\n        throw new Error('Seed phrase must be 12 or 24 words');\n      }\n\n      // Create wallet from mnemonic\n      const wallet = ethers.Wallet.fromMnemonic(seedPhrase.trim());\n      const connectedWallet = wallet.connect(provider);\n      \n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: seedPhrase\n      };\n      \n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(connectedWallet);\n      setView('wallet');\n    } catch (error) {\n      console.error('Invalid seed phrase:', error);\n      alert('Invalid seed phrase. Please check and try again.');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('wallet');\n    setAccount(null);\n    setBalance(0);\n    setView('welcome');\n  };\n\n  const renderContent = () => {\n    if (isLoading) {\n      return <div className=\"loading\">Loading...</div>;\n    }\n\n    if (view === 'import') {\n      return (\n        <div className=\"import-screen\">\n          <h2>Import Wallet</h2>\n          <p className=\"import-instruction\">\n            Enter your 12 or 24-word seed phrase to recover your wallet\n          </p>\n          <form onSubmit={(e) => {\n            e.preventDefault();\n            const seedPhrase = e.target.seedPhrase.value;\n            importWallet(seedPhrase);\n          }}>\n            <textarea\n              name=\"seedPhrase\"\n              placeholder=\"Enter your seed phrase (each word separated by a space)\"\n              required\n              className=\"seed-phrase-input\"\n              rows=\"4\"\n            />\n            <div className=\"import-actions\">\n              <button type=\"submit\">Import Wallet</button>\n              <button \n                type=\"button\"\n                onClick={() => setView('welcome')}\n                className=\"secondary-button\"\n              >\n                Back\n              </button>\n            </div>\n          </form>\n        </div>\n      );\n    }\n\n    if (view === 'seed-phrase' && seedPhrase) {\n      return (\n        <div className=\"seed-phrase-screen\">\n          <h2>Save Your Seed Phrase</h2>\n          <p className=\"warning\">\n            Write down these 12 words in a secure location. You'll need them to recover your wallet.\n          </p>\n          <div className=\"seed-phrase-container\">\n            {seedPhrase.split(' ').map((word, index) => (\n              <div key={index} className=\"seed-word\">\n                <span className=\"word-number\">{index + 1}.</span>\n                <span className=\"word\">{word}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"seed-phrase-actions\">\n            <p className=\"confirmation-text\">\n              I have safely stored my seed phrase\n            </p>\n            <button onClick={confirmSeedPhrase}>Continue to Wallet</button>\n            <button \n              onClick={() => {\n                setAccount(null);\n                setSeedPhrase(null);\n                setView('welcome');\n              }}\n              className=\"secondary-button\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    if (!account || view === 'welcome') {\n      return (\n        <div className=\"welcome-screen\">\n          <h1>Welcome to Crypto Wallet</h1>\n          <div className=\"welcome-buttons\">\n            <button onClick={createWallet}>Create New Wallet</button>\n            <button onClick={() => {\n              console.log('Setting view to import');\n              setView('import');\n            }}>Import Existing Wallet</button>\n          </div>\n        </div>\n      );\n    }\n\n    switch (view) {\n      case 'wallet':\n        return (\n          <WalletCard \n            account={account}\n            balance={balance}\n            network={network}\n          />\n        );\n      case 'transactions':\n        return (\n          <TransactionHistory \n            account={account}\n            network={network}\n          />\n        );\n      case 'dao':\n        return (\n          <DAOInterface \n            account={account}\n            network={network}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar \n        account={account} \n        network={network}\n        setNetwork={setNetwork}\n        setView={setView}\n        onLogout={logout}\n        view={view}\n      />\n      <main className=\"main-content\">\n        {renderContent()}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}