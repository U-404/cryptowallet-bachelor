{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/components/TransactionHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TransactionHistory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionHistory({\n  account,\n  network\n}) {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      const apiKey = process.env.REACT_APP_ETHERSCAN_API_KEY;\n      const baseUrl = network === 'mainnet' ? 'https://api.etherscan.io/api' : 'https://api-sepolia.etherscan.io/api';\n      const response = await fetch(`${baseUrl}?module=account&action=txlist&address=${account.address}&apikey=${apiKey}`);\n      const data = await response.json();\n      setTransactions(data.result);\n    };\n    if (account) {\n      fetchTransactions();\n    }\n  }, [account, network]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-list\",\n      children: transactions.map(tx => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tx-type\",\n          children: tx.from.toLowerCase() === account.address.toLowerCase() ? 'Sent' : 'Received'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tx-amount\",\n          children: [ethers.utils.formatEther(tx.value), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tx-date\",\n          children: new Date(tx.timeStamp * 1000).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${network === 'mainnet' ? 'https://etherscan.io' : 'https://sepolia.etherscan.io'}/tx/${tx.hash}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View on Etherscan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, tx.hash, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionHistory, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionHistory;\nexport default TransactionHistory;\nvar _c;\n$RefreshReg$(_c, \"TransactionHistory\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionHistory","account","network","_s","transactions","setTransactions","fetchTransactions","apiKey","process","env","REACT_APP_ETHERSCAN_API_KEY","baseUrl","response","fetch","address","data","json","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tx","from","toLowerCase","ethers","utils","formatEther","value","Date","timeStamp","toLocaleDateString","href","hash","target","rel","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/components/TransactionHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TransactionHistory.css';\n\nfunction TransactionHistory({ account, network }) {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      const apiKey = process.env.REACT_APP_ETHERSCAN_API_KEY;\n      const baseUrl = network === 'mainnet' \n        ? 'https://api.etherscan.io/api'\n        : 'https://api-sepolia.etherscan.io/api';\n\n      const response = await fetch(\n        `${baseUrl}?module=account&action=txlist&address=${account.address}&apikey=${apiKey}`\n      );\n      const data = await response.json();\n      setTransactions(data.result);\n    };\n\n    if (account) {\n      fetchTransactions();\n    }\n  }, [account, network]);\n\n  return (\n    <div className=\"transaction-history\">\n      <h2>Transaction History</h2>\n      <div className=\"transaction-list\">\n        {transactions.map((tx) => (\n          <div key={tx.hash} className=\"transaction-item\">\n            <div className=\"tx-type\">\n              {tx.from.toLowerCase() === account.address.toLowerCase() ? 'Sent' : 'Received'}\n            </div>\n            <div className=\"tx-amount\">\n              {ethers.utils.formatEther(tx.value)} ETH\n            </div>\n            <div className=\"tx-date\">\n              {new Date(tx.timeStamp * 1000).toLocaleDateString()}\n            </div>\n            <a \n              href={`${network === 'mainnet' ? 'https://etherscan.io' : 'https://sepolia.etherscan.io'}/tx/${tx.hash}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View on Etherscan\n            </a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TransactionHistory; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,kBAAkBA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;MACtD,MAAMC,OAAO,GAAGT,OAAO,KAAK,SAAS,GACjC,8BAA8B,GAC9B,sCAAsC;MAE1C,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGF,OAAO,yCAAyCV,OAAO,CAACa,OAAO,WAAWP,MAAM,EACrF,CAAC;MACD,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCX,eAAe,CAACU,IAAI,CAACE,MAAM,CAAC;IAC9B,CAAC;IAED,IAAIhB,OAAO,EAAE;MACXK,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACL,OAAO,EAAEC,OAAO,CAAC,CAAC;EAEtB,oBACEH,OAAA;IAAKmB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCpB,OAAA;MAAAoB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BxB,OAAA;MAAKmB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9Bf,YAAY,CAACoB,GAAG,CAAEC,EAAE,iBACnB1B,OAAA;QAAmBmB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7CpB,OAAA;UAAKmB,SAAS,EAAC,SAAS;UAAAC,QAAA,EACrBM,EAAE,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK1B,OAAO,CAACa,OAAO,CAACa,WAAW,CAAC,CAAC,GAAG,MAAM,GAAG;QAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACNxB,OAAA;UAAKmB,SAAS,EAAC,WAAW;UAAAC,QAAA,GACvBS,MAAM,CAACC,KAAK,CAACC,WAAW,CAACL,EAAE,CAACM,KAAK,CAAC,EAAC,MACtC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNxB,OAAA;UAAKmB,SAAS,EAAC,SAAS;UAAAC,QAAA,EACrB,IAAIa,IAAI,CAACP,EAAE,CAACQ,SAAS,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACNxB,OAAA;UACEoC,IAAI,EAAE,GAAGjC,OAAO,KAAK,SAAS,GAAG,sBAAsB,GAAG,8BAA8B,OAAOuB,EAAE,CAACW,IAAI,EAAG;UACzGC,MAAM,EAAC,QAAQ;UACfC,GAAG,EAAC,qBAAqB;UAAAnB,QAAA,EAC1B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAhBIE,EAAE,CAACW,IAAI;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAjDQH,kBAAkB;AAAAuC,EAAA,GAAlBvC,kBAAkB;AAmD3B,eAAeA,kBAAkB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}