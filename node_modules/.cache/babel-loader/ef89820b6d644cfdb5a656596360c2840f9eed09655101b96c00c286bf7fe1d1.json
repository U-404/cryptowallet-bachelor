{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('wallet');\n  const provider = new ethers.providers.JsonRpcProvider(network === 'mainnet' ? process.env.REACT_APP_MAINNET_RPC : process.env.REACT_APP_SEPOLIA_RPC);\n  useEffect(() => {\n    const loadWallet = async () => {\n      const savedWallet = localStorage.getItem('wallet');\n      if (savedWallet) {\n        const wallet = new ethers.Wallet(JSON.parse(savedWallet).privateKey, provider);\n        setAccount(wallet);\n        const balance = await provider.getBalance(wallet.address);\n        setBalance(ethers.utils.formatEther(balance));\n      }\n    };\n    loadWallet();\n  }, [network]);\n  const createWallet = async () => {\n    const wallet = ethers.Wallet.createRandom();\n    const walletData = {\n      address: wallet.address,\n      privateKey: wallet.privateKey,\n      mnemonic: wallet.mnemonic.phrase\n    };\n    localStorage.setItem('wallet', JSON.stringify(walletData));\n    setAccount(wallet.connect(provider));\n  };\n  const importWallet = privateKey => {\n    try {\n      const wallet = new ethers.Wallet(privateKey, provider);\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(wallet);\n    } catch (error) {\n      console.error('Invalid private key');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account,\n      network: network,\n      setNetwork: setNetwork,\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: !account ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Crypto Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createWallet,\n          children: \"Create New Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('import'),\n          children: \"Import Existing Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [view === 'wallet' && /*#__PURE__*/_jsxDEV(WalletCard, {\n          account: account,\n          balance: balance,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), view === 'transactions' && /*#__PURE__*/_jsxDEV(TransactionHistory, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), view === 'dao' && /*#__PURE__*/_jsxDEV(DAOInterface, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H1tGdcnL8IGDf4XANL4Ehn4Tws8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Navbar","WalletCard","TransactionHistory","DAOInterface","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","network","setNetwork","balance","setBalance","view","setView","provider","providers","JsonRpcProvider","process","env","REACT_APP_MAINNET_RPC","REACT_APP_SEPOLIA_RPC","loadWallet","savedWallet","localStorage","getItem","wallet","Wallet","JSON","parse","privateKey","getBalance","address","utils","formatEther","createWallet","createRandom","walletData","mnemonic","phrase","setItem","stringify","connect","importWallet","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('wallet');\n\n  const provider = new ethers.providers.JsonRpcProvider(\n    network === 'mainnet' \n      ? process.env.REACT_APP_MAINNET_RPC \n      : process.env.REACT_APP_SEPOLIA_RPC\n  );\n\n  useEffect(() => {\n    const loadWallet = async () => {\n      const savedWallet = localStorage.getItem('wallet');\n      if (savedWallet) {\n        const wallet = new ethers.Wallet(JSON.parse(savedWallet).privateKey, provider);\n        setAccount(wallet);\n        const balance = await provider.getBalance(wallet.address);\n        setBalance(ethers.utils.formatEther(balance));\n      }\n    };\n    loadWallet();\n  }, [network]);\n\n  const createWallet = async () => {\n    const wallet = ethers.Wallet.createRandom();\n    const walletData = {\n      address: wallet.address,\n      privateKey: wallet.privateKey,\n      mnemonic: wallet.mnemonic.phrase\n    };\n    localStorage.setItem('wallet', JSON.stringify(walletData));\n    setAccount(wallet.connect(provider));\n  };\n\n  const importWallet = (privateKey) => {\n    try {\n      const wallet = new ethers.Wallet(privateKey, provider);\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(wallet);\n    } catch (error) {\n      console.error('Invalid private key');\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar \n        account={account} \n        network={network}\n        setNetwork={setNetwork}\n        setView={setView}\n      />\n      \n      <main className=\"main-content\">\n        {!account ? (\n          <div className=\"welcome-screen\">\n            <h1>Welcome to Crypto Wallet</h1>\n            <button onClick={createWallet}>Create New Wallet</button>\n            <button onClick={() => setView('import')}>Import Existing Wallet</button>\n          </div>\n        ) : (\n          <>\n            {view === 'wallet' && (\n              <WalletCard \n                account={account}\n                balance={balance}\n                network={network}\n              />\n            )}\n            {view === 'transactions' && (\n              <TransactionHistory \n                account={account}\n                network={network}\n              />\n            )}\n            {view === 'dao' && (\n              <DAOInterface \n                account={account}\n                network={network}\n              />\n            )}\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EACjD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,QAAQ,CAAC;EAE1C,MAAMqB,QAAQ,GAAG,IAAInB,MAAM,CAACoB,SAAS,CAACC,eAAe,CACnDR,OAAO,KAAK,SAAS,GACjBS,OAAO,CAACC,GAAG,CAACC,qBAAqB,GACjCF,OAAO,CAACC,GAAG,CAACE,qBAClB,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,MAAM2B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAClD,IAAIF,WAAW,EAAE;QACf,MAAMG,MAAM,GAAG,IAAI9B,MAAM,CAAC+B,MAAM,CAACC,IAAI,CAACC,KAAK,CAACN,WAAW,CAAC,CAACO,UAAU,EAAEf,QAAQ,CAAC;QAC9EP,UAAU,CAACkB,MAAM,CAAC;QAClB,MAAMf,OAAO,GAAG,MAAMI,QAAQ,CAACgB,UAAU,CAACL,MAAM,CAACM,OAAO,CAAC;QACzDpB,UAAU,CAAChB,MAAM,CAACqC,KAAK,CAACC,WAAW,CAACvB,OAAO,CAAC,CAAC;MAC/C;IACF,CAAC;IACDW,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;EAEb,MAAM0B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMT,MAAM,GAAG9B,MAAM,CAAC+B,MAAM,CAACS,YAAY,CAAC,CAAC;IAC3C,MAAMC,UAAU,GAAG;MACjBL,OAAO,EAAEN,MAAM,CAACM,OAAO;MACvBF,UAAU,EAAEJ,MAAM,CAACI,UAAU;MAC7BQ,QAAQ,EAAEZ,MAAM,CAACY,QAAQ,CAACC;IAC5B,CAAC;IACDf,YAAY,CAACgB,OAAO,CAAC,QAAQ,EAAEZ,IAAI,CAACa,SAAS,CAACJ,UAAU,CAAC,CAAC;IAC1D7B,UAAU,CAACkB,MAAM,CAACgB,OAAO,CAAC3B,QAAQ,CAAC,CAAC;EACtC,CAAC;EAED,MAAM4B,YAAY,GAAIb,UAAU,IAAK;IACnC,IAAI;MACF,MAAMJ,MAAM,GAAG,IAAI9B,MAAM,CAAC+B,MAAM,CAACG,UAAU,EAAEf,QAAQ,CAAC;MACtD,MAAMsB,UAAU,GAAG;QACjBL,OAAO,EAAEN,MAAM,CAACM,OAAO;QACvBF,UAAU,EAAEJ,MAAM,CAACI;MACrB,CAAC;MACDN,YAAY,CAACgB,OAAO,CAAC,QAAQ,EAAEZ,IAAI,CAACa,SAAS,CAACJ,UAAU,CAAC,CAAC;MAC1D7B,UAAU,CAACkB,MAAM,CAAC;IACpB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAC;IACtC;EACF,CAAC;EAED,oBACE1C,OAAA;IAAK4C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7C,OAAA,CAACL,MAAM;MACLU,OAAO,EAAEA,OAAQ;MACjBE,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBI,OAAO,EAAEA;IAAQ;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eAEFjD,OAAA;MAAM4C,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC3B,CAACxC,OAAO,gBACPL,OAAA;QAAK4C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B7C,OAAA;UAAA6C,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCjD,OAAA;UAAQkD,OAAO,EAAEjB,YAAa;UAAAY,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzDjD,OAAA;UAAQkD,OAAO,EAAEA,CAAA,KAAMtC,OAAO,CAAC,QAAQ,CAAE;UAAAiC,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC,gBAENjD,OAAA,CAAAE,SAAA;QAAA2C,QAAA,GACGlC,IAAI,KAAK,QAAQ,iBAChBX,OAAA,CAACJ,UAAU;UACTS,OAAO,EAAEA,OAAQ;UACjBI,OAAO,EAAEA,OAAQ;UACjBF,OAAO,EAAEA;QAAQ;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CACF,EACAtC,IAAI,KAAK,cAAc,iBACtBX,OAAA,CAACH,kBAAkB;UACjBQ,OAAO,EAAEA,OAAQ;UACjBE,OAAO,EAAEA;QAAQ;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CACF,EACAtC,IAAI,KAAK,KAAK,iBACbX,OAAA,CAACF,YAAY;UACXO,OAAO,EAAEA,OAAQ;UACjBE,OAAO,EAAEA;QAAQ;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CACF;MAAA,eACD;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC7C,EAAA,CA5FQD,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AA8FZ,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}