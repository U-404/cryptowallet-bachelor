{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/components/DAOInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './DAOInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAO_ABI = [\"function getProposals() view returns (tuple(uint256 id, string description, uint256 forVotes, uint256 againstVotes, bool executed)[])\", \"function vote(uint256 proposalId, bool support)\", \"function createProposal(string description)\"];\nfunction DAOInterface({\n  account,\n  network\n}) {\n  _s();\n  const [proposals, setProposals] = useState([]);\n  const [newProposal, setNewProposal] = useState('');\n  const [daoContract, setDaoContract] = useState(null);\n  useEffect(() => {\n    const daoAddress = network === 'mainnet' ? process.env.REACT_APP_DAO_ADDRESS_MAINNET : process.env.REACT_APP_DAO_ADDRESS_SEPOLIA;\n    const contract = new ethers.Contract(daoAddress, DAO_ABI, account);\n    setDaoContract(contract);\n    const fetchProposals = async () => {\n      const props = await contract.getProposals();\n      setProposals(props);\n    };\n    if (contract) {\n      fetchProposals();\n    }\n  }, [account, network]);\n  const createProposal = async () => {\n    try {\n      const tx = await daoContract.createProposal(newProposal);\n      await tx.wait();\n      setNewProposal('');\n      // Refresh proposals\n      const props = await daoContract.getProposals();\n      setProposals(props);\n    } catch (error) {\n      alert('Failed to create proposal: ' + error.message);\n    }\n  };\n  const vote = async (proposalId, support) => {\n    try {\n      const tx = await daoContract.vote(proposalId, support);\n      await tx.wait();\n      // Refresh proposals\n      const props = await daoContract.getProposals();\n      setProposals(props);\n    } catch (error) {\n      alert('Failed to vote: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dao-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DAO Governance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-proposal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newProposal,\n        onChange: e => setNewProposal(e.target.value),\n        placeholder: \"Enter proposal description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProposal,\n        children: \"Submit Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proposals-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Proposals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), proposals.map(proposal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"proposal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Proposal #\", proposal.id.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: proposal.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"For: \", proposal.forVotes.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Against: \", proposal.againstVotes.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => vote(proposal.id, true),\n            children: \"Vote For\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => vote(proposal.id, false),\n            children: \"Vote Against\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, proposal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(DAOInterface, \"u/jhrKNZVNFsqJm7f93KzW6cfgM=\");\n_c = DAOInterface;\nexport default DAOInterface;\nvar _c;\n$RefreshReg$(_c, \"DAOInterface\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","DAO_ABI","DAOInterface","account","network","_s","proposals","setProposals","newProposal","setNewProposal","daoContract","setDaoContract","daoAddress","process","env","REACT_APP_DAO_ADDRESS_MAINNET","REACT_APP_DAO_ADDRESS_SEPOLIA","contract","Contract","fetchProposals","props","getProposals","createProposal","tx","wait","error","alert","message","vote","proposalId","support","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","proposal","id","toString","description","forVotes","againstVotes","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/components/DAOInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './DAOInterface.css';\n\nconst DAO_ABI = [\n  \"function getProposals() view returns (tuple(uint256 id, string description, uint256 forVotes, uint256 againstVotes, bool executed)[])\",\n  \"function vote(uint256 proposalId, bool support)\",\n  \"function createProposal(string description)\"\n];\n\nfunction DAOInterface({ account, network }) {\n  const [proposals, setProposals] = useState([]);\n  const [newProposal, setNewProposal] = useState('');\n  const [daoContract, setDaoContract] = useState(null);\n\n  useEffect(() => {\n    const daoAddress = network === 'mainnet'\n      ? process.env.REACT_APP_DAO_ADDRESS_MAINNET\n      : process.env.REACT_APP_DAO_ADDRESS_SEPOLIA;\n    \n    const contract = new ethers.Contract(daoAddress, DAO_ABI, account);\n    setDaoContract(contract);\n    \n    const fetchProposals = async () => {\n      const props = await contract.getProposals();\n      setProposals(props);\n    };\n\n    if (contract) {\n      fetchProposals();\n    }\n  }, [account, network]);\n\n  const createProposal = async () => {\n    try {\n      const tx = await daoContract.createProposal(newProposal);\n      await tx.wait();\n      setNewProposal('');\n      // Refresh proposals\n      const props = await daoContract.getProposals();\n      setProposals(props);\n    } catch (error) {\n      alert('Failed to create proposal: ' + error.message);\n    }\n  };\n\n  const vote = async (proposalId, support) => {\n    try {\n      const tx = await daoContract.vote(proposalId, support);\n      await tx.wait();\n      // Refresh proposals\n      const props = await daoContract.getProposals();\n      setProposals(props);\n    } catch (error) {\n      alert('Failed to vote: ' + error.message);\n    }\n  };\n\n  return (\n    <div className=\"dao-interface\">\n      <h2>DAO Governance</h2>\n      \n      <div className=\"create-proposal\">\n        <h3>Create New Proposal</h3>\n        <textarea\n          value={newProposal}\n          onChange={(e) => setNewProposal(e.target.value)}\n          placeholder=\"Enter proposal description\"\n        />\n        <button onClick={createProposal}>Submit Proposal</button>\n      </div>\n\n      <div className=\"proposals-list\">\n        <h3>Active Proposals</h3>\n        {proposals.map((proposal) => (\n          <div key={proposal.id} className=\"proposal-item\">\n            <h4>Proposal #{proposal.id.toString()}</h4>\n            <p>{proposal.description}</p>\n            <div className=\"vote-stats\">\n              <span>For: {proposal.forVotes.toString()}</span>\n              <span>Against: {proposal.againstVotes.toString()}</span>\n            </div>\n            <div className=\"vote-buttons\">\n              <button onClick={() => vote(proposal.id, true)}>Vote For</button>\n              <button onClick={() => vote(proposal.id, false)}>Vote Against</button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DAOInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}