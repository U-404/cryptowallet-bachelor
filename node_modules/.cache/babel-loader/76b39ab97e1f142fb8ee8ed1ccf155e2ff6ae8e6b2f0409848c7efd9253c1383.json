{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\nimport OnboardingSteps from './components/OnboardingSteps';\nimport ChatGPT from './components/ChatGPT';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('welcome');\n  const [isLoading, setIsLoading] = useState(true);\n  const [seedPhrase, setSeedPhrase] = useState(null);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const [onboardingStep, setOnboardingStep] = useState(0);\n  const [showWalletTutorial, setShowWalletTutorial] = useState(false);\n  const onboardingSteps = [{\n    title: \"Welcome to Crypto Wallet\",\n    content: \"Let's help you understand the basics of cryptocurrency wallets and how to use them safely.\",\n    buttonText: \"Next\"\n  }, {\n    title: \"What is a Crypto Wallet?\",\n    content: \"A crypto wallet is like your personal bank account for cryptocurrencies. It lets you store, send, and receive digital assets securely.\",\n    buttonText: \"Next\"\n  }, {\n    title: \"Seed Phrase Importance\",\n    content: \"Your seed phrase is like the master key to your wallet. Never share it with anyone and keep it stored safely offline.\",\n    buttonText: \"Next\"\n  }, {\n    title: \"Ready to Start?\",\n    content: \"You can either create a new wallet or import an existing one using your seed phrase.\",\n    buttonText: \"Get Started\"\n  }];\n  const provider = new ethers.providers.JsonRpcProvider(network === 'mainnet' ? process.env.REACT_APP_MAINNET_RPC : process.env.REACT_APP_SEPOLIA_RPC, network === 'mainnet' ? 'mainnet' : 'sepolia');\n  useEffect(() => {\n    // Clear effect to prevent automatic loading\n    localStorage.removeItem('wallet');\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    console.log('Current view:', view);\n  }, [view]);\n  useEffect(() => {\n    const updateWalletForNetwork = async () => {\n      if (account) {\n        const provider = new ethers.providers.JsonRpcProvider(network === 'mainnet' ? process.env.REACT_APP_MAINNET_RPC : process.env.REACT_APP_SEPOLIA_RPC, network === 'mainnet' ? 'mainnet' : 'sepolia');\n        const wallet = account.connect(provider);\n        setAccount(wallet);\n        const balance = await provider.getBalance(wallet.address);\n        setBalance(Number(ethers.utils.formatEther(balance)).toFixed(5));\n      }\n    };\n    updateWalletForNetwork();\n  }, [network]);\n  const loadWallet = async walletData => {\n    try {\n      const wallet = new ethers.Wallet(walletData.privateKey, provider);\n      setAccount(wallet);\n      const balance = await provider.getBalance(wallet.address);\n      setBalance(Number(ethers.utils.formatEther(balance)).toFixed(5));\n      setView('wallet');\n    } catch (error) {\n      console.error('Error loading wallet:', error);\n      alert('Failed to load wallet');\n      localStorage.removeItem('wallet');\n      setView('welcome');\n    }\n  };\n  const createWallet = async () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      };\n      const connectedWallet = wallet.connect(provider);\n      setAccount(connectedWallet);\n      setSeedPhrase(wallet.mnemonic.phrase);\n      setView('seed-phrase');\n    } catch (error) {\n      console.error('Error creating wallet:', error);\n      alert('Failed to create wallet');\n    }\n  };\n  const confirmSeedPhrase = () => {\n    const walletData = {\n      address: account.address,\n      privateKey: account.privateKey,\n      mnemonic: seedPhrase\n    };\n    localStorage.setItem('wallet', JSON.stringify(walletData));\n    setSeedPhrase(null);\n    setView('wallet');\n  };\n  const importWallet = seedPhrase => {\n    try {\n      if (!seedPhrase || seedPhrase.trim() === '') {\n        throw new Error('Seed phrase is required');\n      }\n\n      // Validate seed phrase format (12 or 24 words)\n      const words = seedPhrase.trim().split(' ');\n      if (words.length !== 12 && words.length !== 24) {\n        throw new Error('Seed phrase must be 12 or 24 words');\n      }\n\n      // Create wallet from mnemonic\n      const wallet = ethers.Wallet.fromMnemonic(seedPhrase.trim());\n      const connectedWallet = wallet.connect(provider);\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: seedPhrase\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(connectedWallet);\n      setView('wallet');\n    } catch (error) {\n      console.error('Invalid seed phrase:', error);\n      alert('Invalid seed phrase. Please check and try again.');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('wallet');\n    setAccount(null);\n    setBalance(0);\n    setView('welcome');\n  };\n  const renderContent = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 14\n      }, this);\n    }\n    if (view === 'onboarding') {\n      return /*#__PURE__*/_jsxDEV(OnboardingSteps, {\n        onComplete: () => {\n          setShowWalletTutorial(false);\n          setView('welcome');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this);\n    }\n    if (view === 'import') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"import-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Import Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"import-instruction\",\n          children: \"Enter your 12 or 24-word seed phrase to recover your wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const seedPhrase = e.target.seedPhrase.value;\n            importWallet(seedPhrase);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"seedPhrase\",\n            placeholder: \"Enter your seed phrase (each word separated by a space)\",\n            required: true,\n            className: \"seed-phrase-input\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"import-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Import Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setView('welcome'),\n              className: \"secondary-button\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this);\n    }\n    if (view === 'seed-phrase' && seedPhrase) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seed-phrase-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Save Your Seed Phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning\",\n          children: \"Write down these 12 words in a secure location. You'll need them to recover your wallet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seed-phrase-container\",\n          children: seedPhrase.split(' ').map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seed-word\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"word-number\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"word\",\n              children: word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seed-phrase-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"confirmation-text\",\n            children: \"I have safely stored my seed phrase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: confirmSeedPhrase,\n            children: \"Continue to Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAccount(null);\n              setSeedPhrase(null);\n              setView('welcome');\n            },\n            className: \"secondary-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this);\n    }\n    if (!account || view === 'welcome') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Crypto Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createWallet,\n            children: \"Create New Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView('import'),\n            children: \"Import Existing Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView('onboarding'),\n            className: \"onboarding-btn\",\n            children: \"New to cryptocurrency wallets? Here are some fundamentals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), showOnboarding && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"onboarding-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"onboarding-modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: onboardingSteps[onboardingStep].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: onboardingSteps[onboardingStep].content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"onboarding-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowOnboarding(false),\n                className: \"secondary-button\",\n                children: \"Skip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (onboardingStep === onboardingSteps.length - 1) {\n                    setShowOnboarding(false);\n                    setOnboardingStep(0);\n                  } else {\n                    setOnboardingStep(prev => prev + 1);\n                  }\n                },\n                className: \"primary-button\",\n                children: onboardingSteps[onboardingStep].buttonText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"onboarding-progress\",\n              children: onboardingSteps.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `progress-dot ${index === onboardingStep ? 'active' : ''}`\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this);\n    }\n    switch (view) {\n      case 'wallet':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: showWalletTutorial ? /*#__PURE__*/_jsxDEV(OnboardingSteps, {\n            onComplete: () => setShowWalletTutorial(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(WalletCard, {\n            account: account,\n            balance: balance,\n            network: network\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      case 'transactions':\n        return /*#__PURE__*/_jsxDEV(TransactionHistory, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this);\n      case 'dao':\n        return /*#__PURE__*/_jsxDEV(DAOInterface, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this);\n      case 'chatgpt':\n        return /*#__PURE__*/_jsxDEV(ChatGPT, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account,\n      network: network,\n      setNetwork: setNetwork,\n      setView: setView,\n      onLogout: logout,\n      view: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sPn9eLczpsu7YQhgkcrmOmGrdDE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Navbar","WalletCard","TransactionHistory","DAOInterface","OnboardingSteps","ChatGPT","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","network","setNetwork","balance","setBalance","view","setView","isLoading","setIsLoading","seedPhrase","setSeedPhrase","showOnboarding","setShowOnboarding","onboardingStep","setOnboardingStep","showWalletTutorial","setShowWalletTutorial","onboardingSteps","title","content","buttonText","provider","providers","JsonRpcProvider","process","env","REACT_APP_MAINNET_RPC","REACT_APP_SEPOLIA_RPC","localStorage","removeItem","console","log","updateWalletForNetwork","wallet","connect","getBalance","address","Number","utils","formatEther","toFixed","loadWallet","walletData","Wallet","privateKey","error","alert","createWallet","createRandom","mnemonic","phrase","connectedWallet","confirmSeedPhrase","setItem","JSON","stringify","importWallet","trim","Error","words","split","length","fromMnemonic","logout","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","onSubmit","e","preventDefault","target","value","name","placeholder","required","rows","type","onClick","map","word","index","prev","_","onLogout","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\nimport OnboardingSteps from './components/OnboardingSteps';\nimport ChatGPT from './components/ChatGPT';\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('welcome');\n  const [isLoading, setIsLoading] = useState(true);\n  const [seedPhrase, setSeedPhrase] = useState(null);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const [onboardingStep, setOnboardingStep] = useState(0);\n  const [showWalletTutorial, setShowWalletTutorial] = useState(false);\n\n  const onboardingSteps = [\n    {\n      title: \"Welcome to Crypto Wallet\",\n      content: \"Let's help you understand the basics of cryptocurrency wallets and how to use them safely.\",\n      buttonText: \"Next\"\n    },\n    {\n      title: \"What is a Crypto Wallet?\",\n      content: \"A crypto wallet is like your personal bank account for cryptocurrencies. It lets you store, send, and receive digital assets securely.\",\n      buttonText: \"Next\"\n    },\n    {\n      title: \"Seed Phrase Importance\",\n      content: \"Your seed phrase is like the master key to your wallet. Never share it with anyone and keep it stored safely offline.\",\n      buttonText: \"Next\"\n    },\n    {\n      title: \"Ready to Start?\",\n      content: \"You can either create a new wallet or import an existing one using your seed phrase.\",\n      buttonText: \"Get Started\"\n    }\n  ];\n\n  const provider = new ethers.providers.JsonRpcProvider(\n    network === 'mainnet' \n      ? process.env.REACT_APP_MAINNET_RPC \n      : process.env.REACT_APP_SEPOLIA_RPC,\n    network === 'mainnet' ? 'mainnet' : 'sepolia'\n  );\n\n  useEffect(() => {\n    // Clear effect to prevent automatic loading\n    localStorage.removeItem('wallet');\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    console.log('Current view:', view);\n  }, [view]);\n\n  useEffect(() => {\n    const updateWalletForNetwork = async () => {\n      if (account) {\n        const provider = new ethers.providers.JsonRpcProvider(\n          network === 'mainnet' \n            ? process.env.REACT_APP_MAINNET_RPC \n            : process.env.REACT_APP_SEPOLIA_RPC,\n          network === 'mainnet' ? 'mainnet' : 'sepolia'\n        );\n        \n        const wallet = account.connect(provider);\n        setAccount(wallet);\n        \n        const balance = await provider.getBalance(wallet.address);\n        setBalance(Number(ethers.utils.formatEther(balance)).toFixed(5));\n      }\n    };\n\n    updateWalletForNetwork();\n  }, [network]);\n\n  const loadWallet = async (walletData) => {\n    try {\n      const wallet = new ethers.Wallet(walletData.privateKey, provider);\n      setAccount(wallet);\n      const balance = await provider.getBalance(wallet.address);\n      setBalance(Number(ethers.utils.formatEther(balance)).toFixed(5));\n      setView('wallet');\n    } catch (error) {\n      console.error('Error loading wallet:', error);\n      alert('Failed to load wallet');\n      localStorage.removeItem('wallet');\n      setView('welcome');\n    }\n  };\n\n  const createWallet = async () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      };\n      const connectedWallet = wallet.connect(provider);\n      setAccount(connectedWallet);\n      setSeedPhrase(wallet.mnemonic.phrase);\n      setView('seed-phrase');\n    } catch (error) {\n      console.error('Error creating wallet:', error);\n      alert('Failed to create wallet');\n    }\n  };\n\n  const confirmSeedPhrase = () => {\n    const walletData = {\n      address: account.address,\n      privateKey: account.privateKey,\n      mnemonic: seedPhrase\n    };\n    localStorage.setItem('wallet', JSON.stringify(walletData));\n    setSeedPhrase(null);\n    setView('wallet');\n  };\n\n  const importWallet = (seedPhrase) => {\n    try {\n      if (!seedPhrase || seedPhrase.trim() === '') {\n        throw new Error('Seed phrase is required');\n      }\n\n      // Validate seed phrase format (12 or 24 words)\n      const words = seedPhrase.trim().split(' ');\n      if (words.length !== 12 && words.length !== 24) {\n        throw new Error('Seed phrase must be 12 or 24 words');\n      }\n\n      // Create wallet from mnemonic\n      const wallet = ethers.Wallet.fromMnemonic(seedPhrase.trim());\n      const connectedWallet = wallet.connect(provider);\n      \n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: seedPhrase\n      };\n      \n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(connectedWallet);\n      setView('wallet');\n    } catch (error) {\n      console.error('Invalid seed phrase:', error);\n      alert('Invalid seed phrase. Please check and try again.');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('wallet');\n    setAccount(null);\n    setBalance(0);\n    setView('welcome');\n  };\n\n  const renderContent = () => {\n    if (isLoading) {\n      return <div className=\"loading\">Loading...</div>;\n    }\n\n    if (view === 'onboarding') {\n      return (\n        <OnboardingSteps \n          onComplete={() => {\n            setShowWalletTutorial(false);\n            setView('welcome');\n          }} \n        />\n      );\n    }\n\n    if (view === 'import') {\n      return (\n        <div className=\"import-screen\">\n          <h2>Import Wallet</h2>\n          <p className=\"import-instruction\">\n            Enter your 12 or 24-word seed phrase to recover your wallet\n          </p>\n          <form onSubmit={(e) => {\n            e.preventDefault();\n            const seedPhrase = e.target.seedPhrase.value;\n            importWallet(seedPhrase);\n          }}>\n            <textarea\n              name=\"seedPhrase\"\n              placeholder=\"Enter your seed phrase (each word separated by a space)\"\n              required\n              className=\"seed-phrase-input\"\n              rows=\"4\"\n            />\n            <div className=\"import-actions\">\n              <button type=\"submit\">Import Wallet</button>\n              <button \n                type=\"button\"\n                onClick={() => setView('welcome')}\n                className=\"secondary-button\"\n              >\n                Back\n              </button>\n            </div>\n          </form>\n        </div>\n      );\n    }\n\n    if (view === 'seed-phrase' && seedPhrase) {\n      return (\n        <div className=\"seed-phrase-screen\">\n          <h2>Save Your Seed Phrase</h2>\n          <p className=\"warning\">\n            Write down these 12 words in a secure location. You'll need them to recover your wallet.\n          </p>\n          <div className=\"seed-phrase-container\">\n            {seedPhrase.split(' ').map((word, index) => (\n              <div key={index} className=\"seed-word\">\n                <span className=\"word-number\">{index + 1}.</span>\n                <span className=\"word\">{word}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"seed-phrase-actions\">\n            <p className=\"confirmation-text\">\n              I have safely stored my seed phrase\n            </p>\n            <button onClick={confirmSeedPhrase}>Continue to Wallet</button>\n            <button \n              onClick={() => {\n                setAccount(null);\n                setSeedPhrase(null);\n                setView('welcome');\n              }}\n              className=\"secondary-button\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    if (!account || view === 'welcome') {\n      return (\n        <div className=\"welcome-screen\">\n          <h1>Welcome to Crypto Wallet</h1>\n          <div className=\"welcome-buttons\">\n            <button onClick={createWallet}>Create New Wallet</button>\n            <button onClick={() => setView('import')}>Import Existing Wallet</button>\n            <button \n              onClick={() => setView('onboarding')} \n              className=\"onboarding-btn\"\n            >\n              New to cryptocurrency wallets? Here are some fundamentals\n            </button>\n          </div>\n\n          {/* Onboarding Modal */}\n          {showOnboarding && (\n            <div className=\"onboarding-overlay\">\n              <div className=\"onboarding-modal\">\n                <h2>{onboardingSteps[onboardingStep].title}</h2>\n                <p>{onboardingSteps[onboardingStep].content}</p>\n                <div className=\"onboarding-actions\">\n                  <button \n                    onClick={() => setShowOnboarding(false)} \n                    className=\"secondary-button\"\n                  >\n                    Skip\n                  </button>\n                  <button \n                    onClick={() => {\n                      if (onboardingStep === onboardingSteps.length - 1) {\n                        setShowOnboarding(false);\n                        setOnboardingStep(0);\n                      } else {\n                        setOnboardingStep(prev => prev + 1);\n                      }\n                    }}\n                    className=\"primary-button\"\n                  >\n                    {onboardingSteps[onboardingStep].buttonText}\n                  </button>\n                </div>\n                <div className=\"onboarding-progress\">\n                  {onboardingSteps.map((_, index) => (\n                    <div \n                      key={index} \n                      className={`progress-dot ${index === onboardingStep ? 'active' : ''}`}\n                    />\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    switch (view) {\n      case 'wallet':\n        return (\n          <>\n            {showWalletTutorial ? (\n              <OnboardingSteps onComplete={() => setShowWalletTutorial(false)} />\n            ) : (\n              <WalletCard \n                account={account}\n                balance={balance}\n                network={network}\n              />\n            )}\n          </>\n        );\n      case 'transactions':\n        return (\n          <TransactionHistory \n            account={account}\n            network={network}\n          />\n        );\n      case 'dao':\n        return (\n          <DAOInterface \n            account={account}\n            network={network}\n          />\n        );\n      case 'chatgpt':\n        return <ChatGPT />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar \n        account={account} \n        network={network}\n        setNetwork={setNetwork}\n        setView={setView}\n        onLogout={logout}\n        view={view}\n      />\n      <main className=\"main-content\">\n        {renderContent()}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,SAAS,CAAC;EACjD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC+B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMiC,eAAe,GAAG,CACtB;IACEC,KAAK,EAAE,0BAA0B;IACjCC,OAAO,EAAE,4FAA4F;IACrGC,UAAU,EAAE;EACd,CAAC,EACD;IACEF,KAAK,EAAE,0BAA0B;IACjCC,OAAO,EAAE,wIAAwI;IACjJC,UAAU,EAAE;EACd,CAAC,EACD;IACEF,KAAK,EAAE,wBAAwB;IAC/BC,OAAO,EAAE,uHAAuH;IAChIC,UAAU,EAAE;EACd,CAAC,EACD;IACEF,KAAK,EAAE,iBAAiB;IACxBC,OAAO,EAAE,sFAAsF;IAC/FC,UAAU,EAAE;EACd,CAAC,CACF;EAED,MAAMC,QAAQ,GAAG,IAAInC,MAAM,CAACoC,SAAS,CAACC,eAAe,CACnDtB,OAAO,KAAK,SAAS,GACjBuB,OAAO,CAACC,GAAG,CAACC,qBAAqB,GACjCF,OAAO,CAACC,GAAG,CAACE,qBAAqB,EACrC1B,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SACtC,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd;IACA2C,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;IACjCrB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACd6C,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE1B,IAAI,CAAC;EACpC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVpB,SAAS,CAAC,MAAM;IACd,MAAM+C,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAIjC,OAAO,EAAE;QACX,MAAMsB,QAAQ,GAAG,IAAInC,MAAM,CAACoC,SAAS,CAACC,eAAe,CACnDtB,OAAO,KAAK,SAAS,GACjBuB,OAAO,CAACC,GAAG,CAACC,qBAAqB,GACjCF,OAAO,CAACC,GAAG,CAACE,qBAAqB,EACrC1B,OAAO,KAAK,SAAS,GAAG,SAAS,GAAG,SACtC,CAAC;QAED,MAAMgC,MAAM,GAAGlC,OAAO,CAACmC,OAAO,CAACb,QAAQ,CAAC;QACxCrB,UAAU,CAACiC,MAAM,CAAC;QAElB,MAAM9B,OAAO,GAAG,MAAMkB,QAAQ,CAACc,UAAU,CAACF,MAAM,CAACG,OAAO,CAAC;QACzDhC,UAAU,CAACiC,MAAM,CAACnD,MAAM,CAACoD,KAAK,CAACC,WAAW,CAACpC,OAAO,CAAC,CAAC,CAACqC,OAAO,CAAC,CAAC,CAAC,CAAC;MAClE;IACF,CAAC;IAEDR,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAAC/B,OAAO,CAAC,CAAC;EAEb,MAAMwC,UAAU,GAAG,MAAOC,UAAU,IAAK;IACvC,IAAI;MACF,MAAMT,MAAM,GAAG,IAAI/C,MAAM,CAACyD,MAAM,CAACD,UAAU,CAACE,UAAU,EAAEvB,QAAQ,CAAC;MACjErB,UAAU,CAACiC,MAAM,CAAC;MAClB,MAAM9B,OAAO,GAAG,MAAMkB,QAAQ,CAACc,UAAU,CAACF,MAAM,CAACG,OAAO,CAAC;MACzDhC,UAAU,CAACiC,MAAM,CAACnD,MAAM,CAACoD,KAAK,CAACC,WAAW,CAACpC,OAAO,CAAC,CAAC,CAACqC,OAAO,CAAC,CAAC,CAAC,CAAC;MAChElC,OAAO,CAAC,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOuC,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,KAAK,CAAC,uBAAuB,CAAC;MAC9BlB,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;MACjCvB,OAAO,CAAC,SAAS,CAAC;IACpB;EACF,CAAC;EAED,MAAMyC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMd,MAAM,GAAG/C,MAAM,CAACyD,MAAM,CAACK,YAAY,CAAC,CAAC;MAC3C,MAAMN,UAAU,GAAG;QACjBN,OAAO,EAAEH,MAAM,CAACG,OAAO;QACvBQ,UAAU,EAAEX,MAAM,CAACW,UAAU;QAC7BK,QAAQ,EAAEhB,MAAM,CAACgB,QAAQ,CAACC;MAC5B,CAAC;MACD,MAAMC,eAAe,GAAGlB,MAAM,CAACC,OAAO,CAACb,QAAQ,CAAC;MAChDrB,UAAU,CAACmD,eAAe,CAAC;MAC3BzC,aAAa,CAACuB,MAAM,CAACgB,QAAQ,CAACC,MAAM,CAAC;MACrC5C,OAAO,CAAC,aAAa,CAAC;IACxB,CAAC,CAAC,OAAOuC,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMV,UAAU,GAAG;MACjBN,OAAO,EAAErC,OAAO,CAACqC,OAAO;MACxBQ,UAAU,EAAE7C,OAAO,CAAC6C,UAAU;MAC9BK,QAAQ,EAAExC;IACZ,CAAC;IACDmB,YAAY,CAACyB,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACb,UAAU,CAAC,CAAC;IAC1DhC,aAAa,CAAC,IAAI,CAAC;IACnBJ,OAAO,CAAC,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMkD,YAAY,GAAI/C,UAAU,IAAK;IACnC,IAAI;MACF,IAAI,CAACA,UAAU,IAAIA,UAAU,CAACgD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC3C,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;;MAEA;MACA,MAAMC,KAAK,GAAGlD,UAAU,CAACgD,IAAI,CAAC,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;MAC1C,IAAID,KAAK,CAACE,MAAM,KAAK,EAAE,IAAIF,KAAK,CAACE,MAAM,KAAK,EAAE,EAAE;QAC9C,MAAM,IAAIH,KAAK,CAAC,oCAAoC,CAAC;MACvD;;MAEA;MACA,MAAMzB,MAAM,GAAG/C,MAAM,CAACyD,MAAM,CAACmB,YAAY,CAACrD,UAAU,CAACgD,IAAI,CAAC,CAAC,CAAC;MAC5D,MAAMN,eAAe,GAAGlB,MAAM,CAACC,OAAO,CAACb,QAAQ,CAAC;MAEhD,MAAMqB,UAAU,GAAG;QACjBN,OAAO,EAAEH,MAAM,CAACG,OAAO;QACvBQ,UAAU,EAAEX,MAAM,CAACW,UAAU;QAC7BK,QAAQ,EAAExC;MACZ,CAAC;MAEDmB,YAAY,CAACyB,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACb,UAAU,CAAC,CAAC;MAC1D1C,UAAU,CAACmD,eAAe,CAAC;MAC3B7C,OAAO,CAAC,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOuC,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,KAAK,CAAC,kDAAkD,CAAC;IAC3D;EACF,CAAC;EAED,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACnBnC,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;IACjC7B,UAAU,CAAC,IAAI,CAAC;IAChBI,UAAU,CAAC,CAAC,CAAC;IACbE,OAAO,CAAC,SAAS,CAAC;EACpB,CAAC;EAED,MAAM0D,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIzD,SAAS,EAAE;MACb,oBAAOb,OAAA;QAAKuE,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAClD;IAEA,IAAIjE,IAAI,KAAK,YAAY,EAAE;MACzB,oBACEX,OAAA,CAACH,eAAe;QACdgF,UAAU,EAAEA,CAAA,KAAM;UAChBvD,qBAAqB,CAAC,KAAK,CAAC;UAC5BV,OAAO,CAAC,SAAS,CAAC;QACpB;MAAE;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEN;IAEA,IAAIjE,IAAI,KAAK,QAAQ,EAAE;MACrB,oBACEX,OAAA;QAAKuE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BxE,OAAA;UAAAwE,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB5E,OAAA;UAAGuE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAElC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ5E,OAAA;UAAM8E,QAAQ,EAAGC,CAAC,IAAK;YACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;YAClB,MAAMjE,UAAU,GAAGgE,CAAC,CAACE,MAAM,CAAClE,UAAU,CAACmE,KAAK;YAC5CpB,YAAY,CAAC/C,UAAU,CAAC;UAC1B,CAAE;UAAAyD,QAAA,gBACAxE,OAAA;YACEmF,IAAI,EAAC,YAAY;YACjBC,WAAW,EAAC,yDAAyD;YACrEC,QAAQ;YACRd,SAAS,EAAC,mBAAmB;YAC7Be,IAAI,EAAC;UAAG;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACF5E,OAAA;YAAKuE,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BxE,OAAA;cAAQuF,IAAI,EAAC,QAAQ;cAAAf,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC5C5E,OAAA;cACEuF,IAAI,EAAC,QAAQ;cACbC,OAAO,EAAEA,CAAA,KAAM5E,OAAO,CAAC,SAAS,CAAE;cAClC2D,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAC7B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAEV;IAEA,IAAIjE,IAAI,KAAK,aAAa,IAAII,UAAU,EAAE;MACxC,oBACEf,OAAA;QAAKuE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCxE,OAAA;UAAAwE,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9B5E,OAAA;UAAGuE,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAEvB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ5E,OAAA;UAAKuE,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EACnCzD,UAAU,CAACmD,KAAK,CAAC,GAAG,CAAC,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrC3F,OAAA;YAAiBuE,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACpCxE,OAAA;cAAMuE,SAAS,EAAC,aAAa;cAAAC,QAAA,GAAEmB,KAAK,GAAG,CAAC,EAAC,GAAC;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjD5E,OAAA;cAAMuE,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAEkB;YAAI;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAF5Be,KAAK;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5E,OAAA;UAAKuE,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCxE,OAAA;YAAGuE,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAEjC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJ5E,OAAA;YAAQwF,OAAO,EAAE9B,iBAAkB;YAAAc,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/D5E,OAAA;YACEwF,OAAO,EAAEA,CAAA,KAAM;cACblF,UAAU,CAAC,IAAI,CAAC;cAChBU,aAAa,CAAC,IAAI,CAAC;cACnBJ,OAAO,CAAC,SAAS,CAAC;YACpB,CAAE;YACF2D,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC7B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEV;IAEA,IAAI,CAACvE,OAAO,IAAIM,IAAI,KAAK,SAAS,EAAE;MAClC,oBACEX,OAAA;QAAKuE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BxE,OAAA;UAAAwE,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjC5E,OAAA;UAAKuE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BxE,OAAA;YAAQwF,OAAO,EAAEnC,YAAa;YAAAmB,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzD5E,OAAA;YAAQwF,OAAO,EAAEA,CAAA,KAAM5E,OAAO,CAAC,QAAQ,CAAE;YAAA4D,QAAA,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzE5E,OAAA;YACEwF,OAAO,EAAEA,CAAA,KAAM5E,OAAO,CAAC,YAAY,CAAE;YACrC2D,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC3B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAGL3D,cAAc,iBACbjB,OAAA;UAAKuE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjCxE,OAAA;YAAKuE,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BxE,OAAA;cAAAwE,QAAA,EAAKjD,eAAe,CAACJ,cAAc,CAAC,CAACK;YAAK;cAAAiD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChD5E,OAAA;cAAAwE,QAAA,EAAIjD,eAAe,CAACJ,cAAc,CAAC,CAACM;YAAO;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChD5E,OAAA;cAAKuE,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjCxE,OAAA;gBACEwF,OAAO,EAAEA,CAAA,KAAMtE,iBAAiB,CAAC,KAAK,CAAE;gBACxCqD,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAC7B;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT5E,OAAA;gBACEwF,OAAO,EAAEA,CAAA,KAAM;kBACb,IAAIrE,cAAc,KAAKI,eAAe,CAAC4C,MAAM,GAAG,CAAC,EAAE;oBACjDjD,iBAAiB,CAAC,KAAK,CAAC;oBACxBE,iBAAiB,CAAC,CAAC,CAAC;kBACtB,CAAC,MAAM;oBACLA,iBAAiB,CAACwE,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;kBACrC;gBACF,CAAE;gBACFrB,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAEzBjD,eAAe,CAACJ,cAAc,CAAC,CAACO;cAAU;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACN5E,OAAA;cAAKuE,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EACjCjD,eAAe,CAACkE,GAAG,CAAC,CAACI,CAAC,EAAEF,KAAK,kBAC5B3F,OAAA;gBAEEuE,SAAS,EAAE,gBAAgBoB,KAAK,KAAKxE,cAAc,GAAG,QAAQ,GAAG,EAAE;cAAG,GADjEwE,KAAK;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEX,CACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAEV;IAEA,QAAQjE,IAAI;MACV,KAAK,QAAQ;QACX,oBACEX,OAAA,CAAAE,SAAA;UAAAsE,QAAA,EACGnD,kBAAkB,gBACjBrB,OAAA,CAACH,eAAe;YAACgF,UAAU,EAAEA,CAAA,KAAMvD,qBAAqB,CAAC,KAAK;UAAE;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEnE5E,OAAA,CAACN,UAAU;YACTW,OAAO,EAAEA,OAAQ;YACjBI,OAAO,EAAEA,OAAQ;YACjBF,OAAO,EAAEA;UAAQ;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QACF,gBACD,CAAC;MAEP,KAAK,cAAc;QACjB,oBACE5E,OAAA,CAACL,kBAAkB;UACjBU,OAAO,EAAEA,OAAQ;UACjBE,OAAO,EAAEA;QAAQ;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAEN,KAAK,KAAK;QACR,oBACE5E,OAAA,CAACJ,YAAY;UACXS,OAAO,EAAEA,OAAQ;UACjBE,OAAO,EAAEA;QAAQ;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAEN,KAAK,SAAS;QACZ,oBAAO5E,OAAA,CAACF,OAAO;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACpB;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACE5E,OAAA;IAAKuE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxE,OAAA,CAACP,MAAM;MACLY,OAAO,EAAEA,OAAQ;MACjBE,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBI,OAAO,EAAEA,OAAQ;MACjBkF,QAAQ,EAAEzB,MAAO;MACjB1D,IAAI,EAAEA;IAAK;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACF5E,OAAA;MAAMuE,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC3BF,aAAa,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxE,EAAA,CA3VQD,GAAG;AAAA4F,EAAA,GAAH5F,GAAG;AA6VZ,eAAeA,GAAG;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}