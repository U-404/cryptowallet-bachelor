{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/components/DAOInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './DAOInterface.css';\n\n// Import your DAO ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daoABI = [/* Add the ABI from your compiled contract */];\nfunction DAOInterface({\n  account,\n  network\n}) {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [proposals, setProposals] = useState([]);\n  const [newProposal, setNewProposal] = useState('');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const initializeContract = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get the appropriate contract address based on network\n        const contractAddress = network === 'mainnet' ? process.env.REACT_APP_DAO_CONTRACT_MAINNET : process.env.REACT_APP_DAO_CONTRACT_SEPOLIA;\n\n        // Validate contract address\n        if (!contractAddress) {\n          throw new Error(`No DAO contract address configured for ${network} network`);\n        }\n\n        // Create contract instance\n        const daoContract = new ethers.Contract(contractAddress, daoABI, account.provider);\n        setContract(daoContract);\n        await fetchProposals(daoContract);\n        await fetchTokenBalance(daoContract);\n      } catch (err) {\n        console.error('Error initializing DAO contract:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (account) {\n      initializeContract();\n    }\n  }, [account, network]);\n  const fetchTokenBalance = async daoContract => {\n    try {\n      const token = await daoContract.token();\n      const tokenContract = new ethers.Contract(token, [\"function balanceOf(address) view returns (uint256)\"], account.provider);\n      const balance = await tokenContract.balanceOf(account.address);\n      setTokenBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error('Error fetching token balance:', err);\n    }\n  };\n  const fetchProposals = async daoContract => {\n    try {\n      const count = await daoContract.proposalCount();\n      const proposalPromises = [];\n      for (let i = 1; i <= count.toNumber(); i++) {\n        proposalPromises.push(daoContract.getProposal(i));\n      }\n      const fetchedProposals = await Promise.all(proposalPromises);\n      setProposals(fetchedProposals.map(p => ({\n        id: p.id.toNumber(),\n        description: p.description,\n        forVotes: ethers.utils.formatEther(p.forVotes),\n        againstVotes: ethers.utils.formatEther(p.againstVotes),\n        deadline: new Date(p.deadline.toNumber() * 1000),\n        executed: p.executed\n      })));\n    } catch (err) {\n      console.error('Error fetching proposals:', err);\n      setError(err.message);\n    }\n  };\n  const createProposal = async () => {\n    try {\n      const tx = await contract.createProposal(newProposal);\n      await tx.wait();\n      setNewProposal('');\n      await fetchProposals(contract);\n    } catch (err) {\n      alert('Error creating proposal: ' + err.message);\n    }\n  };\n  const vote = async (proposalId, support) => {\n    try {\n      const tx = await contract.vote(proposalId, support);\n      await tx.wait();\n      await fetchProposals(contract);\n    } catch (err) {\n      alert('Error voting: ' + err.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-loading\",\n      children: \"Loading DAO interface...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error Loading DAO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please make sure you're connected to the correct network and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dao-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DAO Governance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Voting Power: \", tokenBalance, \" DAO\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-proposal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newProposal,\n        onChange: e => setNewProposal(e.target.value),\n        placeholder: \"Enter proposal description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProposal,\n        children: \"Create Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proposals-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Proposals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), proposals.map(proposal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"proposal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: proposal.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"For: \", proposal.forVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Against: \", proposal.againstVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Deadline: \", proposal.deadline.toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), !proposal.executed && new Date() < proposal.deadline && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => vote(proposal.id, true),\n            children: \"Vote For\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => vote(proposal.id, false),\n            children: \"Vote Against\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), proposal.executed && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"executed\",\n          children: \"Executed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 35\n        }, this)]\n      }, proposal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(DAOInterface, \"1RI7DmebzN1Tv8La6/DcEGyH8Os=\");\n_c = DAOInterface;\nexport default DAOInterface;\nvar _c;\n$RefreshReg$(_c, \"DAOInterface\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","daoABI","DAOInterface","account","network","_s","contract","setContract","proposals","setProposals","newProposal","setNewProposal","tokenBalance","setTokenBalance","loading","setLoading","error","setError","initializeContract","contractAddress","process","env","REACT_APP_DAO_CONTRACT_MAINNET","REACT_APP_DAO_CONTRACT_SEPOLIA","Error","daoContract","Contract","provider","fetchProposals","fetchTokenBalance","err","console","message","token","tokenContract","balance","balanceOf","address","utils","formatEther","count","proposalCount","proposalPromises","i","toNumber","push","getProposal","fetchedProposals","Promise","all","map","p","id","description","forVotes","againstVotes","deadline","Date","executed","createProposal","tx","wait","alert","vote","proposalId","support","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","proposal","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/components/DAOInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './DAOInterface.css';\n\n// Import your DAO ABI\nconst daoABI = [/* Add the ABI from your compiled contract */];\n\nfunction DAOInterface({ account, network }) {\n  const [contract, setContract] = useState(null);\n  const [proposals, setProposals] = useState([]);\n  const [newProposal, setNewProposal] = useState('');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const initializeContract = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get the appropriate contract address based on network\n        const contractAddress = network === 'mainnet'\n          ? process.env.REACT_APP_DAO_CONTRACT_MAINNET\n          : process.env.REACT_APP_DAO_CONTRACT_SEPOLIA;\n\n        // Validate contract address\n        if (!contractAddress) {\n          throw new Error(`No DAO contract address configured for ${network} network`);\n        }\n\n        // Create contract instance\n        const daoContract = new ethers.Contract(\n          contractAddress,\n          daoABI,\n          account.provider\n        );\n\n        setContract(daoContract);\n        await fetchProposals(daoContract);\n        await fetchTokenBalance(daoContract);\n      } catch (err) {\n        console.error('Error initializing DAO contract:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (account) {\n      initializeContract();\n    }\n  }, [account, network]);\n\n  const fetchTokenBalance = async (daoContract) => {\n    try {\n      const token = await daoContract.token();\n      const tokenContract = new ethers.Contract(\n        token,\n        [\"function balanceOf(address) view returns (uint256)\"],\n        account.provider\n      );\n      const balance = await tokenContract.balanceOf(account.address);\n      setTokenBalance(ethers.utils.formatEther(balance));\n    } catch (err) {\n      console.error('Error fetching token balance:', err);\n    }\n  };\n\n  const fetchProposals = async (daoContract) => {\n    try {\n      const count = await daoContract.proposalCount();\n      const proposalPromises = [];\n\n      for (let i = 1; i <= count.toNumber(); i++) {\n        proposalPromises.push(daoContract.getProposal(i));\n      }\n\n      const fetchedProposals = await Promise.all(proposalPromises);\n      setProposals(fetchedProposals.map(p => ({\n        id: p.id.toNumber(),\n        description: p.description,\n        forVotes: ethers.utils.formatEther(p.forVotes),\n        againstVotes: ethers.utils.formatEther(p.againstVotes),\n        deadline: new Date(p.deadline.toNumber() * 1000),\n        executed: p.executed\n      })));\n    } catch (err) {\n      console.error('Error fetching proposals:', err);\n      setError(err.message);\n    }\n  };\n\n  const createProposal = async () => {\n    try {\n      const tx = await contract.createProposal(newProposal);\n      await tx.wait();\n      setNewProposal('');\n      await fetchProposals(contract);\n    } catch (err) {\n      alert('Error creating proposal: ' + err.message);\n    }\n  };\n\n  const vote = async (proposalId, support) => {\n    try {\n      const tx = await contract.vote(proposalId, support);\n      await tx.wait();\n      await fetchProposals(contract);\n    } catch (err) {\n      alert('Error voting: ' + err.message);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"dao-loading\">Loading DAO interface...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"dao-error\">\n        <h2>Error Loading DAO</h2>\n        <p>{error}</p>\n        <p>Please make sure you're connected to the correct network and try again.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dao-interface\">\n      <h2>DAO Governance</h2>\n      \n      <div className=\"dao-info\">\n        <p>Your Voting Power: {tokenBalance} DAO</p>\n      </div>\n\n      <div className=\"create-proposal\">\n        <h3>Create Proposal</h3>\n        <textarea\n          value={newProposal}\n          onChange={(e) => setNewProposal(e.target.value)}\n          placeholder=\"Enter proposal description\"\n        />\n        <button onClick={createProposal}>Create Proposal</button>\n      </div>\n\n      <div className=\"proposals-list\">\n        <h3>Active Proposals</h3>\n        {proposals.map((proposal) => (\n          <div key={proposal.id} className=\"proposal-item\">\n            <h4>{proposal.description}</h4>\n            <div className=\"vote-stats\">\n              <span>For: {proposal.forVotes}</span>\n              <span>Against: {proposal.againstVotes}</span>\n              <span>Deadline: {proposal.deadline.toLocaleDateString()}</span>\n            </div>\n            {!proposal.executed && new Date() < proposal.deadline && (\n              <div className=\"vote-buttons\">\n                <button onClick={() => vote(proposal.id, true)}>Vote For</button>\n                <button onClick={() => vote(proposal.id, false)}>Vote Against</button>\n              </div>\n            )}\n            {proposal.executed && <span className=\"executed\">Executed</span>}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DAOInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}