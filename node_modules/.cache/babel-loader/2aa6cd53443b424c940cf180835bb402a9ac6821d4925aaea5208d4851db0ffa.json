{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('welcome');\n  const provider = new ethers.providers.JsonRpcProvider(network === 'mainnet' ? process.env.REACT_APP_MAINNET_RPC : process.env.REACT_APP_SEPOLIA_RPC, network === 'mainnet' ? 'mainnet' : 'sepolia');\n  useEffect(() => {\n    const loadWallet = async () => {\n      const savedWallet = localStorage.getItem('wallet');\n      if (savedWallet) {\n        const wallet = new ethers.Wallet(JSON.parse(savedWallet).privateKey, provider);\n        setAccount(wallet);\n        const balance = await provider.getBalance(wallet.address);\n        setBalance(ethers.utils.formatEther(balance));\n        setView('wallet');\n      }\n    };\n    loadWallet();\n  }, [network]);\n  const createWallet = async () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      const connectedWallet = wallet.connect(provider);\n      setAccount(connectedWallet);\n      setView('wallet');\n      alert(`Please save your mnemonic phrase safely:\\n${wallet.mnemonic.phrase}`);\n    } catch (error) {\n      console.error('Error creating wallet:', error);\n      alert('Failed to create wallet');\n    }\n  };\n  const importWallet = privateKey => {\n    try {\n      const wallet = new ethers.Wallet(privateKey, provider);\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(wallet);\n      setView('wallet');\n    } catch (error) {\n      console.error('Invalid private key');\n      alert('Invalid private key');\n    }\n  };\n  const renderContent = () => {\n    if (!account || view === 'welcome') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Crypto Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createWallet,\n            children: \"Create New Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView('import'),\n            children: \"Import Existing Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n    switch (view) {\n      case 'wallet':\n        return /*#__PURE__*/_jsxDEV(WalletCard, {\n          account: account,\n          balance: balance,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this);\n      case 'transactions':\n        return /*#__PURE__*/_jsxDEV(TransactionHistory, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this);\n      case 'dao':\n        return /*#__PURE__*/_jsxDEV(DAOInterface, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this);\n      case 'import':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"import-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Import Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Private Key\",\n            onChange: e => importWallet(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account,\n      network: network,\n      setNetwork: setNetwork,\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z0A/4qHYUJu1nZlU7mvoxiT4Mbw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Navbar","WalletCard","TransactionHistory","DAOInterface","jsxDEV","_jsxDEV","App","_s","account","setAccount","network","setNetwork","balance","setBalance","view","setView","provider","providers","JsonRpcProvider","process","env","REACT_APP_MAINNET_RPC","REACT_APP_SEPOLIA_RPC","loadWallet","savedWallet","localStorage","getItem","wallet","Wallet","JSON","parse","privateKey","getBalance","address","utils","formatEther","createWallet","createRandom","walletData","mnemonic","phrase","setItem","stringify","connectedWallet","connect","alert","error","console","importWallet","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('welcome');\n\n  const provider = new ethers.providers.JsonRpcProvider(\n    network === 'mainnet' \n      ? process.env.REACT_APP_MAINNET_RPC \n      : process.env.REACT_APP_SEPOLIA_RPC,\n    network === 'mainnet' ? 'mainnet' : 'sepolia'\n  );\n\n  useEffect(() => {\n    const loadWallet = async () => {\n      const savedWallet = localStorage.getItem('wallet');\n      if (savedWallet) {\n        const wallet = new ethers.Wallet(JSON.parse(savedWallet).privateKey, provider);\n        setAccount(wallet);\n        const balance = await provider.getBalance(wallet.address);\n        setBalance(ethers.utils.formatEther(balance));\n        setView('wallet');\n      }\n    };\n    loadWallet();\n  }, [network]);\n\n  const createWallet = async () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      const connectedWallet = wallet.connect(provider);\n      setAccount(connectedWallet);\n      setView('wallet');\n      alert(`Please save your mnemonic phrase safely:\\n${wallet.mnemonic.phrase}`);\n    } catch (error) {\n      console.error('Error creating wallet:', error);\n      alert('Failed to create wallet');\n    }\n  };\n\n  const importWallet = (privateKey) => {\n    try {\n      const wallet = new ethers.Wallet(privateKey, provider);\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(wallet);\n      setView('wallet');\n    } catch (error) {\n      console.error('Invalid private key');\n      alert('Invalid private key');\n    }\n  };\n\n  const renderContent = () => {\n    if (!account || view === 'welcome') {\n      return (\n        <div className=\"welcome-screen\">\n          <h1>Welcome to Crypto Wallet</h1>\n          <div className=\"welcome-buttons\">\n            <button onClick={createWallet}>Create New Wallet</button>\n            <button onClick={() => setView('import')}>Import Existing Wallet</button>\n          </div>\n        </div>\n      );\n    }\n\n    switch (view) {\n      case 'wallet':\n        return (\n          <WalletCard \n            account={account}\n            balance={balance}\n            network={network}\n          />\n        );\n      case 'transactions':\n        return (\n          <TransactionHistory \n            account={account}\n            network={network}\n          />\n        );\n      case 'dao':\n        return (\n          <DAOInterface \n            account={account}\n            network={network}\n          />\n        );\n      case 'import':\n        return (\n          <div className=\"import-screen\">\n            <h2>Import Wallet</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Private Key\"\n              onChange={(e) => importWallet(e.target.value)}\n            />\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar \n        account={account} \n        network={network}\n        setNetwork={setNetwork}\n        setView={setView}\n      />\n      <main className=\"main-content\">\n        {renderContent()}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}