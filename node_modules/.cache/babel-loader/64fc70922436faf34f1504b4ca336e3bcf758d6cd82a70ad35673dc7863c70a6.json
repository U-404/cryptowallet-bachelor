{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/components/TransactionHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './TransactionHistory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionHistory({\n  account,\n  network\n}) {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      const apiKey = process.env.REACT_APP_ETHERSCAN_API_KEY;\n      const baseUrl = network === 'mainnet' ? 'https://api.etherscan.io/api' : 'https://api-sepolia.etherscan.io/api';\n      const response = await fetch(`${baseUrl}?module=account&action=txlist&address=${account.address}&apikey=${apiKey}`);\n      const data = await response.json();\n\n      // Sort transactions by timestamp in descending order (newest first)\n      const sortedTransactions = data.result ? data.result.sort((a, b) => b.timeStamp - a.timeStamp) : [];\n      setTransactions(sortedTransactions);\n    };\n    if (account) {\n      fetchTransactions();\n    }\n  }, [account, network]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-list\",\n      children: [transactions.map(tx => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-type\",\n              children: tx.from.toLowerCase() === account.address.toLowerCase() ? 'Sent' : 'Received'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-amount\",\n              children: [Number(ethers.utils.formatEther(tx.value)).toFixed(5), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-date\",\n              children: new Date(tx.timeStamp * 1000).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-address\",\n              children: tx.from.toLowerCase() === account.address.toLowerCase() ? `To: ${tx.to.slice(0, 6)}...${tx.to.slice(-4)}` : `From: ${tx.from.slice(0, 6)}...${tx.from.slice(-4)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${network === 'mainnet' ? 'https://etherscan.io' : 'https://sepolia.etherscan.io'}/tx/${tx.hash}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"transaction-link\",\n              children: \"View on Etherscan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-status\",\n          children: tx.confirmations > 0 ? 'Completed' : 'Pending'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, tx.hash, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)), transactions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-transactions\",\n        children: \"No transactions found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionHistory, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionHistory;\nexport default TransactionHistory;\nvar _c;\n$RefreshReg$(_c, \"TransactionHistory\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","TransactionHistory","account","network","_s","transactions","setTransactions","fetchTransactions","apiKey","process","env","REACT_APP_ETHERSCAN_API_KEY","baseUrl","response","fetch","address","data","json","sortedTransactions","result","sort","a","b","timeStamp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tx","from","toLowerCase","Number","utils","formatEther","value","toFixed","Date","toLocaleDateString","to","slice","href","hash","target","rel","confirmations","length","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/components/TransactionHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './TransactionHistory.css';\n\nfunction TransactionHistory({ account, network }) {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      const apiKey = process.env.REACT_APP_ETHERSCAN_API_KEY;\n      const baseUrl = network === 'mainnet' \n        ? 'https://api.etherscan.io/api'\n        : 'https://api-sepolia.etherscan.io/api';\n\n      const response = await fetch(\n        `${baseUrl}?module=account&action=txlist&address=${account.address}&apikey=${apiKey}`\n      );\n      const data = await response.json();\n      \n      // Sort transactions by timestamp in descending order (newest first)\n      const sortedTransactions = data.result\n        ? data.result.sort((a, b) => b.timeStamp - a.timeStamp)\n        : [];\n      \n      setTransactions(sortedTransactions);\n    };\n\n    if (account) {\n      fetchTransactions();\n    }\n  }, [account, network]);\n\n  return (\n    <div className=\"transaction-history\">\n      <h2>Transaction History</h2>\n      <div className=\"transaction-list\">\n        {transactions.map((tx) => (\n          <div key={tx.hash} className=\"transaction-item\">\n            <div className=\"transaction-info\">\n              <div className=\"transaction-row\">\n                <span className=\"transaction-type\">\n                  {tx.from.toLowerCase() === account.address.toLowerCase() ? 'Sent' : 'Received'}\n                </span>\n                <span className=\"transaction-amount\">\n                  {Number(ethers.utils.formatEther(tx.value)).toFixed(5)} ETH\n                </span>\n                <span className=\"transaction-date\">\n                  {new Date(tx.timeStamp * 1000).toLocaleDateString()}\n                </span>\n              </div>\n              <div className=\"transaction-row\">\n                <span className=\"transaction-address\">\n                  {tx.from.toLowerCase() === account.address.toLowerCase() ? \n                    `To: ${tx.to.slice(0, 6)}...${tx.to.slice(-4)}` :\n                    `From: ${tx.from.slice(0, 6)}...${tx.from.slice(-4)}`\n                  }\n                </span>\n                <a \n                  href={`${network === 'mainnet' ? 'https://etherscan.io' : 'https://sepolia.etherscan.io'}/tx/${tx.hash}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"transaction-link\"\n                >\n                  View on Etherscan\n                </a>\n              </div>\n            </div>\n            <div className=\"transaction-status\">\n              {tx.confirmations > 0 ? 'Completed' : 'Pending'}\n            </div>\n          </div>\n        ))}\n        {transactions.length === 0 && (\n          <div className=\"no-transactions\">\n            No transactions found\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TransactionHistory; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,kBAAkBA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;MACtD,MAAMC,OAAO,GAAGT,OAAO,KAAK,SAAS,GACjC,8BAA8B,GAC9B,sCAAsC;MAE1C,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGF,OAAO,yCAAyCV,OAAO,CAACa,OAAO,WAAWP,MAAM,EACrF,CAAC;MACD,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,kBAAkB,GAAGF,IAAI,CAACG,MAAM,GAClCH,IAAI,CAACG,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,SAAS,GAAGF,CAAC,CAACE,SAAS,CAAC,GACrD,EAAE;MAENjB,eAAe,CAACY,kBAAkB,CAAC;IACrC,CAAC;IAED,IAAIhB,OAAO,EAAE;MACXK,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACL,OAAO,EAAEC,OAAO,CAAC,CAAC;EAEtB,oBACEH,OAAA;IAAKwB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCzB,OAAA;MAAAyB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B7B,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAC9BpB,YAAY,CAACyB,GAAG,CAAEC,EAAE,iBACnB/B,OAAA;QAAmBwB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7CzB,OAAA;UAAKwB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BzB,OAAA;YAAKwB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BzB,OAAA;cAAMwB,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAC/BM,EAAE,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK/B,OAAO,CAACa,OAAO,CAACkB,WAAW,CAAC,CAAC,GAAG,MAAM,GAAG;YAAU;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1E,CAAC,eACP7B,OAAA;cAAMwB,SAAS,EAAC,oBAAoB;cAAAC,QAAA,GACjCS,MAAM,CAACpC,MAAM,CAACqC,KAAK,CAACC,WAAW,CAACL,EAAE,CAACM,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,MACzD;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACP7B,OAAA;cAAMwB,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAC/B,IAAIc,IAAI,CAACR,EAAE,CAACR,SAAS,GAAG,IAAI,CAAC,CAACiB,kBAAkB,CAAC;YAAC;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN7B,OAAA;YAAKwB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BzB,OAAA;cAAMwB,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAClCM,EAAE,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK/B,OAAO,CAACa,OAAO,CAACkB,WAAW,CAAC,CAAC,GACtD,OAAOF,EAAE,CAACU,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMX,EAAE,CAACU,EAAE,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAC/C,SAASX,EAAE,CAACC,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMX,EAAE,CAACC,IAAI,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC;YAAE;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEnD,CAAC,eACP7B,OAAA;cACE2C,IAAI,EAAE,GAAGxC,OAAO,KAAK,SAAS,GAAG,sBAAsB,GAAG,8BAA8B,OAAO4B,EAAE,CAACa,IAAI,EAAG;cACzGC,MAAM,EAAC,QAAQ;cACfC,GAAG,EAAC,qBAAqB;cACzBtB,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAC7B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN7B,OAAA;UAAKwB,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAChCM,EAAE,CAACgB,aAAa,GAAG,CAAC,GAAG,WAAW,GAAG;QAAS;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA,GAhCEE,EAAE,CAACa,IAAI;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiCZ,CACN,CAAC,EACDxB,YAAY,CAAC2C,MAAM,KAAK,CAAC,iBACxBhD,OAAA;QAAKwB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAEjC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CA5EQH,kBAAkB;AAAAgD,EAAA,GAAlBhD,kBAAkB;AA8E3B,eAAeA,kBAAkB;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}