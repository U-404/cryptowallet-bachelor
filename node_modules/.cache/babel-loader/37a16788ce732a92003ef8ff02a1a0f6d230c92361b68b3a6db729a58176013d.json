{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/components/DAOInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './DAOInterface.css';\nimport LoadingSpinner from './LoadingSpinner';\n\n// Sample DAO ABI - Replace with your actual DAO contract ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daoABI = [\"function getProposalCount() view returns (uint256)\", \"function proposals(uint256) view returns (uint256 id, address proposer, string description, uint256 forVotes, uint256 againstVotes, bool executed, bool canceled)\", \"function vote(uint256 proposalId, bool support)\", \"function createProposal(string description)\"];\nfunction DAOInterface({\n  account,\n  network\n}) {\n  _s();\n  const [contract, setContract] = useState(null);\n  const [proposals, setProposals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newProposal, setNewProposal] = useState('');\n  useEffect(() => {\n    const initializeContract = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // For demo purposes, using a sample contract address\n        // Replace with your actual contract addresses\n        const contractAddress = network === 'mainnet' ? '0x123...your-mainnet-contract' // Replace with actual address\n        : '0x456...your-testnet-contract'; // Replace with actual address\n\n        if (!contractAddress) {\n          throw new Error(`No DAO contract address configured for ${network} network`);\n        }\n        const daoContract = new ethers.Contract(contractAddress, daoABI, account.provider);\n        setContract(daoContract);\n\n        // For demo purposes, creating sample proposals\n        const sampleProposals = [{\n          id: 1,\n          description: \"Implement new staking mechanism\",\n          forVotes: \"100\",\n          againstVotes: \"20\",\n          executed: false,\n          canceled: false\n        }, {\n          id: 2,\n          description: \"Add support for new token standard\",\n          forVotes: \"150\",\n          againstVotes: \"50\",\n          executed: true,\n          canceled: false\n        }];\n        setProposals(sampleProposals);\n      } catch (err) {\n        console.error('Error initializing DAO contract:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (account) {\n      initializeContract();\n    }\n  }, [account, network]);\n  const handleVote = async (proposalId, support) => {\n    try {\n      // In a real implementation, this would call the contract's vote function\n      alert(`Voted ${support ? 'for' : 'against'} proposal ${proposalId}`);\n    } catch (error) {\n      alert('Error voting: ' + error.message);\n    }\n  };\n  const handleCreateProposal = async e => {\n    e.preventDefault();\n    try {\n      // In a real implementation, this would call the contract's createProposal function\n      alert(`Created proposal: ${newProposal}`);\n      setNewProposal('');\n    } catch (error) {\n      alert('Error creating proposal: ' + error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-loading\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading DAO interface...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error Loading DAO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please make sure you're connected to the correct network and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dao-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DAO Governance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-proposal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateProposal,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newProposal,\n          onChange: e => setNewProposal(e.target.value),\n          placeholder: \"Enter your proposal description\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Proposal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proposals-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Proposals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), proposals.map(proposal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"proposal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Proposal #\", proposal.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"proposal-description\",\n          children: proposal.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"For: \", proposal.forVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Against: \", proposal.againstVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), proposal.executed && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"executed\",\n            children: \"Executed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 37\n          }, this), proposal.canceled && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"canceled\",\n            children: \"Canceled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), !proposal.executed && !proposal.canceled && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(proposal.id, true),\n            className: \"vote-for\",\n            children: \"Vote For\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(proposal.id, false),\n            className: \"vote-against\",\n            children: \"Vote Against\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this)]\n      }, proposal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)), proposals.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-proposals\",\n        children: \"No active proposals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(DAOInterface, \"0wI6bt4w0VrD6M0AEcuIKmOl19Q=\");\n_c = DAOInterface;\nexport default DAOInterface;\nvar _c;\n$RefreshReg$(_c, \"DAOInterface\");","map":{"version":3,"names":["React","useState","useEffect","ethers","LoadingSpinner","jsxDEV","_jsxDEV","daoABI","DAOInterface","account","network","_s","contract","setContract","proposals","setProposals","loading","setLoading","error","setError","newProposal","setNewProposal","initializeContract","contractAddress","Error","daoContract","Contract","provider","sampleProposals","id","description","forVotes","againstVotes","executed","canceled","err","console","message","handleVote","proposalId","support","alert","handleCreateProposal","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","map","proposal","onClick","length","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/components/DAOInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './DAOInterface.css';\nimport LoadingSpinner from './LoadingSpinner';\n\n// Sample DAO ABI - Replace with your actual DAO contract ABI\nconst daoABI = [\n  \"function getProposalCount() view returns (uint256)\",\n  \"function proposals(uint256) view returns (uint256 id, address proposer, string description, uint256 forVotes, uint256 againstVotes, bool executed, bool canceled)\",\n  \"function vote(uint256 proposalId, bool support)\",\n  \"function createProposal(string description)\"\n];\n\nfunction DAOInterface({ account, network }) {\n  const [contract, setContract] = useState(null);\n  const [proposals, setProposals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newProposal, setNewProposal] = useState('');\n\n  useEffect(() => {\n    const initializeContract = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // For demo purposes, using a sample contract address\n        // Replace with your actual contract addresses\n        const contractAddress = network === 'mainnet'\n          ? '0x123...your-mainnet-contract' // Replace with actual address\n          : '0x456...your-testnet-contract'; // Replace with actual address\n\n        if (!contractAddress) {\n          throw new Error(`No DAO contract address configured for ${network} network`);\n        }\n\n        const daoContract = new ethers.Contract(\n          contractAddress,\n          daoABI,\n          account.provider\n        );\n\n        setContract(daoContract);\n        \n        // For demo purposes, creating sample proposals\n        const sampleProposals = [\n          {\n            id: 1,\n            description: \"Implement new staking mechanism\",\n            forVotes: \"100\",\n            againstVotes: \"20\",\n            executed: false,\n            canceled: false\n          },\n          {\n            id: 2,\n            description: \"Add support for new token standard\",\n            forVotes: \"150\",\n            againstVotes: \"50\",\n            executed: true,\n            canceled: false\n          }\n        ];\n        \n        setProposals(sampleProposals);\n      } catch (err) {\n        console.error('Error initializing DAO contract:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (account) {\n      initializeContract();\n    }\n  }, [account, network]);\n\n  const handleVote = async (proposalId, support) => {\n    try {\n      // In a real implementation, this would call the contract's vote function\n      alert(`Voted ${support ? 'for' : 'against'} proposal ${proposalId}`);\n    } catch (error) {\n      alert('Error voting: ' + error.message);\n    }\n  };\n\n  const handleCreateProposal = async (e) => {\n    e.preventDefault();\n    try {\n      // In a real implementation, this would call the contract's createProposal function\n      alert(`Created proposal: ${newProposal}`);\n      setNewProposal('');\n    } catch (error) {\n      alert('Error creating proposal: ' + error.message);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"dao-loading\">\n        <LoadingSpinner />\n        <p>Loading DAO interface...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"dao-error\">\n        <h2>Error Loading DAO</h2>\n        <p>{error}</p>\n        <p>Please make sure you're connected to the correct network and try again.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dao-interface\">\n      <h2>DAO Governance</h2>\n      \n      <div className=\"create-proposal\">\n        <h3>Create Proposal</h3>\n        <form onSubmit={handleCreateProposal}>\n          <textarea\n            value={newProposal}\n            onChange={(e) => setNewProposal(e.target.value)}\n            placeholder=\"Enter your proposal description\"\n            required\n          />\n          <button type=\"submit\">Submit Proposal</button>\n        </form>\n      </div>\n\n      <div className=\"proposals-list\">\n        <h3>Active Proposals</h3>\n        {proposals.map((proposal) => (\n          <div key={proposal.id} className=\"proposal-item\">\n            <h4>Proposal #{proposal.id}</h4>\n            <p className=\"proposal-description\">{proposal.description}</p>\n            <div className=\"vote-stats\">\n              <span>For: {proposal.forVotes}</span>\n              <span>Against: {proposal.againstVotes}</span>\n              {proposal.executed && <span className=\"executed\">Executed</span>}\n              {proposal.canceled && <span className=\"canceled\">Canceled</span>}\n            </div>\n            {!proposal.executed && !proposal.canceled && (\n              <div className=\"vote-buttons\">\n                <button \n                  onClick={() => handleVote(proposal.id, true)}\n                  className=\"vote-for\"\n                >\n                  Vote For\n                </button>\n                <button \n                  onClick={() => handleVote(proposal.id, false)}\n                  className=\"vote-against\"\n                >\n                  Vote Against\n                </button>\n              </div>\n            )}\n          </div>\n        ))}\n        {proposals.length === 0 && (\n          <p className=\"no-proposals\">No active proposals</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DAOInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}