{"ast":null,"code":"var _jsxFileName = \"/Users/angeluzunov/Desktop/Coursor project 1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('welcome');\n  const [isLoading, setIsLoading] = useState(true);\n  const provider = new ethers.providers.JsonRpcProvider(network === 'mainnet' ? process.env.REACT_APP_MAINNET_RPC : process.env.REACT_APP_SEPOLIA_RPC, network === 'mainnet' ? 'mainnet' : 'sepolia');\n  useEffect(() => {\n    // Clear effect to prevent automatic loading\n    localStorage.removeItem('wallet');\n    setIsLoading(false);\n  }, []);\n  const loadWallet = async walletData => {\n    try {\n      const wallet = new ethers.Wallet(walletData.privateKey, provider);\n      setAccount(wallet);\n      const balance = await provider.getBalance(wallet.address);\n      setBalance(ethers.utils.formatEther(balance));\n      setView('wallet');\n    } catch (error) {\n      console.error('Error loading wallet:', error);\n      alert('Failed to load wallet');\n      localStorage.removeItem('wallet');\n      setView('welcome');\n    }\n  };\n  const createWallet = async () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      };\n      const connectedWallet = wallet.connect(provider);\n      setAccount(connectedWallet);\n\n      // Show mnemonic phrase to user and ask for confirmation\n      const confirmed = window.confirm(`Please save your mnemonic phrase safely:\\n\\n${wallet.mnemonic.phrase}\\n\\nClick OK only after you've saved it securely.`);\n      if (confirmed) {\n        localStorage.setItem('wallet', JSON.stringify(walletData));\n        setView('wallet');\n      } else {\n        setAccount(null);\n        setView('welcome');\n      }\n    } catch (error) {\n      console.error('Error creating wallet:', error);\n      alert('Failed to create wallet');\n    }\n  };\n  const importWallet = privateKey => {\n    try {\n      const wallet = new ethers.Wallet(privateKey, provider);\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(wallet);\n      setView('wallet');\n    } catch (error) {\n      console.error('Invalid private key');\n      alert('Invalid private key');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('wallet');\n    setAccount(null);\n    setBalance(0);\n    setView('welcome');\n  };\n  const renderContent = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this);\n    }\n    if (!account || view === 'welcome') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Crypto Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createWallet,\n            children: \"Create New Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView('import'),\n            children: \"Import Existing Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this);\n    }\n    switch (view) {\n      case 'wallet':\n        return /*#__PURE__*/_jsxDEV(WalletCard, {\n          account: account,\n          balance: balance,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this);\n      case 'transactions':\n        return /*#__PURE__*/_jsxDEV(TransactionHistory, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this);\n      case 'dao':\n        return /*#__PURE__*/_jsxDEV(DAOInterface, {\n          account: account,\n          network: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this);\n      case 'import':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"import-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Import Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Private Key\",\n            onChange: e => importWallet(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView('welcome'),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account,\n      network: network,\n      setNetwork: setNetwork,\n      setView: setView,\n      onLogout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KFegDfJME+TvVwp4QB47Igi8LeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Navbar","WalletCard","TransactionHistory","DAOInterface","jsxDEV","_jsxDEV","App","_s","account","setAccount","network","setNetwork","balance","setBalance","view","setView","isLoading","setIsLoading","provider","providers","JsonRpcProvider","process","env","REACT_APP_MAINNET_RPC","REACT_APP_SEPOLIA_RPC","localStorage","removeItem","loadWallet","walletData","wallet","Wallet","privateKey","getBalance","address","utils","formatEther","error","console","alert","createWallet","createRandom","mnemonic","phrase","connectedWallet","connect","confirmed","window","confirm","setItem","JSON","stringify","importWallet","logout","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","value","onLogout","_c","$RefreshReg$"],"sources":["/Users/angeluzunov/Desktop/Coursor project 1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WalletCard from './components/WalletCard';\nimport TransactionHistory from './components/TransactionHistory';\nimport DAOInterface from './components/DAOInterface';\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [balance, setBalance] = useState(0);\n  const [view, setView] = useState('welcome');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const provider = new ethers.providers.JsonRpcProvider(\n    network === 'mainnet' \n      ? process.env.REACT_APP_MAINNET_RPC \n      : process.env.REACT_APP_SEPOLIA_RPC,\n    network === 'mainnet' ? 'mainnet' : 'sepolia'\n  );\n\n  useEffect(() => {\n    // Clear effect to prevent automatic loading\n    localStorage.removeItem('wallet');\n    setIsLoading(false);\n  }, []);\n\n  const loadWallet = async (walletData) => {\n    try {\n      const wallet = new ethers.Wallet(walletData.privateKey, provider);\n      setAccount(wallet);\n      const balance = await provider.getBalance(wallet.address);\n      setBalance(ethers.utils.formatEther(balance));\n      setView('wallet');\n    } catch (error) {\n      console.error('Error loading wallet:', error);\n      alert('Failed to load wallet');\n      localStorage.removeItem('wallet');\n      setView('welcome');\n    }\n  };\n\n  const createWallet = async () => {\n    try {\n      const wallet = ethers.Wallet.createRandom();\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey,\n        mnemonic: wallet.mnemonic.phrase\n      };\n      const connectedWallet = wallet.connect(provider);\n      setAccount(connectedWallet);\n      \n      // Show mnemonic phrase to user and ask for confirmation\n      const confirmed = window.confirm(\n        `Please save your mnemonic phrase safely:\\n\\n${wallet.mnemonic.phrase}\\n\\nClick OK only after you've saved it securely.`\n      );\n      \n      if (confirmed) {\n        localStorage.setItem('wallet', JSON.stringify(walletData));\n        setView('wallet');\n      } else {\n        setAccount(null);\n        setView('welcome');\n      }\n    } catch (error) {\n      console.error('Error creating wallet:', error);\n      alert('Failed to create wallet');\n    }\n  };\n\n  const importWallet = (privateKey) => {\n    try {\n      const wallet = new ethers.Wallet(privateKey, provider);\n      const walletData = {\n        address: wallet.address,\n        privateKey: wallet.privateKey\n      };\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      setAccount(wallet);\n      setView('wallet');\n    } catch (error) {\n      console.error('Invalid private key');\n      alert('Invalid private key');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('wallet');\n    setAccount(null);\n    setBalance(0);\n    setView('welcome');\n  };\n\n  const renderContent = () => {\n    if (isLoading) {\n      return <div className=\"loading\">Loading...</div>;\n    }\n\n    if (!account || view === 'welcome') {\n      return (\n        <div className=\"welcome-screen\">\n          <h1>Welcome to Crypto Wallet</h1>\n          <div className=\"welcome-buttons\">\n            <button onClick={createWallet}>Create New Wallet</button>\n            <button onClick={() => setView('import')}>Import Existing Wallet</button>\n          </div>\n        </div>\n      );\n    }\n\n    switch (view) {\n      case 'wallet':\n        return (\n          <WalletCard \n            account={account}\n            balance={balance}\n            network={network}\n          />\n        );\n      case 'transactions':\n        return (\n          <TransactionHistory \n            account={account}\n            network={network}\n          />\n        );\n      case 'dao':\n        return (\n          <DAOInterface \n            account={account}\n            network={network}\n          />\n        );\n      case 'import':\n        return (\n          <div className=\"import-screen\">\n            <h2>Import Wallet</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Private Key\"\n              onChange={(e) => importWallet(e.target.value)}\n            />\n            <button onClick={() => setView('welcome')}>Back</button>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar \n        account={account} \n        network={network}\n        setNetwork={setNetwork}\n        setView={setView}\n        onLogout={logout}\n      />\n      <main className=\"main-content\">\n        {renderContent()}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}